{"version":3,"sources":["assets/img/Diamond.svg","assets/img/Back.svg","assets/img/cards/A_Clubs.svg","assets/img/cards/2_Clubs.svg","assets/img/cards/3_Clubs.svg","assets/img/cards/4_Clubs.svg","assets/img/cards/5_Clubs.svg","assets/img/cards/6_Clubs.svg","assets/img/cards/7_Clubs.svg","assets/img/cards/8_Clubs.svg","assets/img/cards/9_Clubs.svg","assets/img/cards/10_Clubs.svg","assets/img/cards/J_Clubs.svg","assets/img/cards/Q_Clubs.svg","assets/img/cards/K_Clubs.svg","assets/img/cards/A_Diamonds.svg","assets/img/cards/2_Diamonds.svg","assets/img/cards/3_Diamonds.svg","assets/img/cards/4_Diamonds.svg","assets/img/cards/5_Diamonds.svg","assets/img/cards/6_Diamonds.svg","assets/img/cards/7_Diamonds.svg","assets/img/cards/8_Diamonds.svg","assets/img/cards/9_Diamonds.svg","assets/img/cards/10_Diamonds.svg","assets/img/cards/J_Diamonds.svg","assets/img/cards/Q_Diamonds.svg","assets/img/cards/K_Diamonds.svg","assets/img/cards/A_Hearts.svg","assets/img/cards/2_Hearts.svg","assets/img/cards/3_Hearts.svg","assets/img/cards/4_Hearts.svg","assets/img/cards/5_Hearts.svg","assets/img/cards/6_Hearts.svg","assets/img/cards/7_Hearts.svg","assets/img/cards/8_Hearts.svg","assets/img/cards/9_Hearts.svg","assets/img/cards/10_Hearts.svg","assets/img/cards/J_Hearts.svg","assets/img/cards/Q_Hearts.svg","assets/img/cards/K_Hearts.svg","assets/img/cards/A_Spades.svg","assets/img/cards/2_Spades.svg","assets/img/cards/3_Spades.svg","assets/img/cards/4_Spades.svg","assets/img/cards/5_Spades.svg","assets/img/cards/6_Spades.svg","assets/img/cards/7_Spades.svg","assets/img/cards/8_Spades.svg","assets/img/cards/9_Spades.svg","assets/img/cards/10_Spades.svg","assets/img/cards/J_Spades.svg","assets/img/cards/Q_Spades.svg","assets/img/cards/K_Spades.svg","assets/img/Hint.svg","assets/img/Time icon.svg","assets/img/Plus.svg","assets/img/Check.svg","redux/freecell/freecell.types.js","utils/utils.js","redux/freecell/freecell.utils.js","redux/freecell/freecell.reducer.js","redux/rootReducer.js","redux/store.js","redux/freecell/freecell.action.js","redux/freecell/freecell.selectors.js","components/Header/Header.component.jsx","reactdnd/freecell.dndtypes.js","components/FreeCellCard/FreeCellCard.component.jsx","components/FreeCells/FreeCells.component.jsx","components/HomeCellCard/HomeCellCard.component.jsx","components/HomeCells/HomeCells.component.jsx","components/Card/Card.component.jsx","components/NestedDraggable/NestedDraggable.component.jsx","components/BlankDraggable/BlankDraggable.component.jsx","components/TableauColumn/TableauColumn.component.jsx","components/Tableau/Tableau.component.jsx","components/RestartGameButton/RestartGameButton.component.jsx","components/NewGameButton/NewGameButton.component.jsx","components/EndGameCard/EndGameCard.component.jsx","components/CardDragPreview/CardDragPreview.component.jsx","components/CustomDragLayer/CustomDragLayer.component.jsx","components/GameBoard/GameBoard.component.jsx","components/EndGameButton/EndGameButton.component.jsx","components/Menu/Menu.component.jsx","pages/FreeCell/FreeCell.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FreeCellTypes","DRAG_CARD","REMOVE_DRAGGED_CARD","DROP_CARD","DROP_CARD_TO_FREE_CELL","DROP_CARD_TO_HOME_CELL","START_A_NEW_GAME","RESTART_THIS_GAME","END_GAME","TOGGLE_MENU","BACK_ONE_STEP","GET_HINT","UPDATE_TIMER","INCREASE_GAME_POINTS","generateRandomCards","rand","temp","card","rng","seed","lastNum","next","this","Math","pow","FreeCellRNG","floor","random","deck","ranks","suits","cards","i","length","j","push","getDeck","deltCards","currentColumn","currentRow","pop","getImageObj","Club_A","Diamond_A","Heart_A","Spade_A","Club_2","Diamond_2","Heart_2","Spade_2","Club_3","Diamond_3","Heart_3","Spade_3","Club_4","Diamond_4","Heart_4","Spade_4","Club_5","Diamond_5","Heart_5","Spade_5","Club_6","Diamond_6","Heart_6","Spade_6","Club_7","Diamond_7","Heart_7","Spade_7","Club_8","Diamond_8","Heart_8","Spade_8","Club_9","Diamond_9","Heart_9","Spade_9","Club_10","Diamond_10","Heart_10","Spade_10","Club_J","Diamond_J","Heart_J","Spade_J","Club_Q","Diamond_Q","Heart_Q","Spade_Q","Club_K","Diamond_K","Heart_K","Spade_K","isDifferentColorSuit","suitA","suitB","isSameSuit","valueOfFreeceell","cardPoint","parseInt","substractEqualToOne","pointA","pointB","getTime","totalSeconds","minutes","seconds","numOfEmptyCards","count","forEach","isDraggable","tableauCards","freeCellCards","columnIndex","index","tableauColumn","numOfDraggableCard","splice","reverse","map","split","point","suit","getErea","freeCellIndex","homeCellIndex","getDraggedElements","isDraggedCard","draggedElement","dragSource","dropCard","state","payload","newTableauCards","newFreeCellCards","targetColumnIndex","draggedElements","dropCardToFreeCell","dropCardToHomeCell","homeCellCards","newHomeCellCards","saveHistory","source","target","backOneStep","lastMove","moveHistories","lastMoveSourceErea","lastTargetElementList","targetErea","lastTargetElement","lastTargetIndex","numOfCards","getLastTargetElementList","isLastCardInTableauColumn","isEmptyCard","getHint","tableauDraggableCards","array","shuffle","getAllTableauDraggableCards","getAllFreeCellCards","getAllHomeCellCards","hint","tableauCard","homeCellCard","tableauCardA","tableauCardB","freeCellCard","console","log","INIT_RAMDOM_CARDS","INITIAL_STATE","initTableauCards","inner","slice","game","points","time","showMenu","freecellReducer","action","type","FreecellTypes","rootReducer","combineReducers","freecell","store","createLogger","createStore","applyMiddleware","dragCard","removeDraggedCard","toggleMenu","endGameSelector","createSelector","reduce","row","Header","isEndGame","useSelector","gamePoints","gameTime","dispatch","useDispatch","useState","timer","setTimer","useEffect","clearInterval","setInterval","className","src","Diamond","alt","ItemTypes","Card","drag","isDragging","ref","style","backgroundImage","opacity","FreeCellCard","props","showHint","find","h","useDrag","item","begin","end","monitor","canDrag","collect","preview","getEmptyImage","captureDraggingState","cardImg","useDrop","accept","canDrop","drop","key","FreeCells","HomeCellCard","isDraggedCardPoint","isDraggedCardSuit","canDropHomeCell","HomeCells","getStyles","isOver","isLastElement","border","borderRadius","getTop","cardLength","getStyle","top","width","height","NestedDraggable","nested","cardSuit","isDroppable","propsRef","BlankDraggable","TableauColumn","Tableau","RestartGameButton","onClick","Back","NewGameButton","Plus","EndGameCard","gamePoint","Time","CardPreview","CardDragPreview","renderCard","layerStyles","position","pointerEvents","zIndex","left","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","GameBoard","EndGameButton","Check","Menu","isShow","FreeCell","canBackOneStep","handleToggleMenu","backend","HTML5Backend","Hint","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,qC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,wBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,iBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,ygBCgB5BC,EAhBO,CACpBC,UAAW,YACXC,oBAAqB,sBACrBC,UAAW,YACXC,uBAAwB,yBACxBC,uBAAwB,yBACxBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,SAAU,WACVC,YAAa,cACbC,cAAe,gBACfC,SAAU,WACVC,aAAc,eACdC,qBAAsB,wB,29BC4FjB,SAASC,KAYd,IAXA,IAQIC,EACAC,EACAC,EATEC,EAzCR,SAAqBC,GACnB,MAAO,CACLC,QAASD,EACTE,KAFK,WAIH,OADAC,KAAKF,SAAW,OAASE,KAAKF,QAAU,SAAWG,KAAKC,IAAI,EAAG,IACxDF,KAAKF,SAAW,KAoCfK,CADCF,KAAKG,MAAsB,IAAhBH,KAAKI,UAAsB,GAE7CC,EAhCR,WAkBE,IAjBA,IAAMC,EAAQ,CACZ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KAEIC,EAAQ,CAAC,QAAS,WAAY,SAAU,UACxCC,EAAQ,GACLC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,GAAK,EACrC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,GAAK,EACrCH,EAAMI,KAAN,UAAcN,EAAMG,GAApB,YAA0BF,EAAMI,KAGpC,OAAOH,EASMK,GAEPC,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3CC,EAAgB,EAChBC,EAAa,EAKVX,EAAKK,OAAS,GAEnBlB,EAAOG,EAAIG,OAASO,EAAKK,OAGzBjB,EAAOY,EAAKA,EAAKK,OAAS,GAC1BL,EAAKA,EAAKK,OAAS,GAAKL,EAAKb,GAC7Ba,EAAKb,GAAQC,EAGbC,EAAOW,EAAKY,MAGZH,EAAUE,GAAYJ,KAAKlB,IAEL,KADtBqB,GAAiB,IACWC,EAAa,GAAuB,IAAlBD,KAC5CA,EAAgB,EAChBC,GAAc,GAIlB,OAAOF,EAGF,SAASI,GAAYxB,GAC1B,MAAa,YAATA,EACKyB,IACW,eAATzB,EACF0B,IACW,aAAT1B,EACF2B,KACW,aAAT3B,EACF4B,KACW,YAAT5B,EACF6B,IACW,eAAT7B,EACF8B,IACW,aAAT9B,EACF+B,KACW,aAAT/B,EACFgC,KACW,YAAThC,EACFiC,IACW,eAATjC,EACFkC,IACW,aAATlC,EACFmC,KACW,aAATnC,EACFoC,KACW,YAATpC,EACFqC,IACW,eAATrC,EACFsC,IACW,aAATtC,EACFuC,KACW,aAATvC,EACFwC,KACW,YAATxC,EACFyC,IACW,eAATzC,EACF0C,IACW,aAAT1C,EACF2C,KACW,aAAT3C,EACF4C,KACW,YAAT5C,EACF6C,IACW,eAAT7C,EACF8C,IACW,aAAT9C,EACF+C,KACW,aAAT/C,EACFgD,KACW,YAAThD,EACFiD,IACW,eAATjD,EACFkD,IACW,aAATlD,EACFmD,KACW,aAATnD,EACFoD,KACW,YAATpD,EACFqD,IACW,eAATrD,EACFsD,KACW,aAATtD,EACFuD,KACW,aAATvD,EACFwD,KACW,YAATxD,EACFyD,IACW,eAATzD,EACF0D,KACW,aAAT1D,EACF2D,KACW,aAAT3D,EACF4D,KACW,aAAT5D,EACF6D,IACW,gBAAT7D,EACF8D,KACW,cAAT9D,EACF+D,KACW,cAAT/D,EACFgE,KACW,YAAThE,EACFiE,IACW,eAATjE,EACFkE,KACW,aAATlE,EACFmE,KACW,aAATnE,EACFoE,KACW,YAATpE,EACFqE,IACW,eAATrE,EACFsE,KACW,aAATtE,EACFuE,KACW,aAATvE,EACFwE,KACW,YAATxE,EACFyE,IACW,eAATzE,EACF0E,KACW,aAAT1E,EACF2E,KACW,aAAT3E,EACF4E,UADF,EAUF,SAASC,GAAqBC,EAAOC,GAC1C,QACa,aAAVD,GAAkC,WAAVA,GACd,UAAVC,GAA+B,WAAVA,MAIX,UAAVD,GAA+B,WAAVA,GACX,aAAVC,GAAkC,WAAVA,GAYtB,SAASC,GAAWF,EAAOC,GAChC,OAAOD,IAAUC,EAOnB,SAASE,GAAiBC,GACxB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,GACT,IAAK,IACH,OAAO,GACT,IAAK,IACH,OAAO,GACT,QACE,OAAOC,SAASD,IASf,SAASE,GAAoBC,EAAQC,GAC1C,OAAOL,GAAiBI,GAAUJ,GAAiBK,KAAY,EAuD1D,SAASC,GAAQC,GACtB,IAAIC,EAAUnF,KAAKG,MAAM+E,EAAe,IACpCE,EAAUF,EAAyB,GAAVC,EAI7B,OAFIA,EAAU,KAAIA,EAAU,IAAMA,GAC9BC,EAAU,KAAIA,EAAU,IAAMA,GAC5B,GAAN,OAAUD,EAAV,YAAqBC,GAOvB,SAASC,GAAgB7E,GACvB,IAAI8E,EAAQ,EAMZ,OALA9E,EAAM+E,SAAQ,SAAA7F,GACC,OAATA,GAAiC,IAAhBA,EAAKgB,SACxB4E,GAAS,MAGNA,EAYF,SAASE,GAAYC,EAAcC,EAAeC,EAAaC,GACpE,IAAMC,EAAgBJ,EAAaE,GAC7BG,EACJT,GAAgBI,GAAgBJ,GAAgBK,GAAiB,EAGnE,GAF2BG,EAAcnF,OAASkF,EAEzBE,EAAoB,OAAO,EAUpD,IARA,IACMtF,EADgB,YAAOqF,GAE1BE,OAAOH,EAAOC,EAAcnF,OAASkF,GACrCI,UACAC,KAAI,SAAAvG,GAAS,IAAD,EACWA,EAAKwG,MAAM,KADtB,mBAEX,MAAO,CAAEC,MAFE,KAEKC,KAFL,SAIN3F,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,IAAK,CACzC,IAAK8D,GAAqB/D,EAAMC,GAAG2F,KAAM5F,EAAMC,EAAI,GAAG2F,MACpD,OAAO,EAET,IAAKtB,GAAoBtE,EAAMC,EAAI,GAAG0F,MAAO3F,EAAMC,GAAG0F,OACpD,OAAO,EAIX,OAAO,ECvZT,IAAME,GAAU,SAAA3G,GACd,MAAgC,qBAArBA,EAAKiG,YACP,UACgC,qBAAvBjG,EAAK4G,cACd,WACgC,qBAAvB5G,EAAK6G,cACd,gBADF,GAKHC,GAAqB,SAACf,EAAcC,EAAee,GACvD,IAAIC,EACEC,EAAaN,GAAQI,GAC3B,GAAmB,YAAfE,EAA0B,CAC5B,IAAMd,EAAgBJ,EAAagB,EAAcd,aACjDe,EAAiBb,EAAcE,OAC7BU,EAAcb,MACdC,EAAcnF,OAAS+F,EAAcb,WAEf,aAAfe,IACTD,EAAiB,CAAChB,EAAce,EAAcH,gBAC9CZ,EAAce,EAAcH,eAAiB,MAE/C,OAAOI,GAGIE,GAAW,SAACC,EAAOC,GAAa,IAAD,EAClCrB,EAA+CoB,EAA/CpB,aAAcC,EAAiCmB,EAAjCnB,cAAee,EAAkBI,EAAlBJ,cAC/BM,EAAe,YAAOtB,GACtBuB,EAAgB,YAAOtB,GAEvBuB,EAAoBH,EAAQnB,YAC9BuB,EAAkBV,GACpBO,EACAC,EACAP,GAIF,OAFA,EAAAM,EAAgBE,IAAmBrG,KAAnC,oBAA2CsG,IAEpC,CAAExB,cAAesB,EAAkBvB,aAAcsB,IAG7CI,GAAqB,SAACN,EAAOC,GAAa,IAC7CrB,EAA+CoB,EAA/CpB,aAAcC,EAAiCmB,EAAjCnB,cAAee,EAAkBI,EAAlBJ,cAC/BM,EAAe,YAAOtB,GACtBuB,EAAgB,YAAOtB,GAEvBuB,EAAoBH,EAAQR,cAC5BI,EAAiBF,GACrBO,EACAC,EACAP,GAIF,OAFAO,EAAiBC,GAAqBP,EAAe,GAE9C,CAAEhB,cAAesB,EAAkBvB,aAAcsB,IAG7CK,GAAqB,SAACP,EAAOC,GAAa,IAC7CrB,EAA8DoB,EAA9DpB,aAAc4B,EAAgDR,EAAhDQ,cAAe3B,EAAiCmB,EAAjCnB,cAAee,EAAkBI,EAAlBJ,cAC9CM,EAAe,YAAOtB,GACtB6B,EAAgB,YAAOD,GACvBL,EAAgB,YAAOtB,GAEzBgB,EAAiBF,GACnBO,EACAC,EACAP,GAKF,OAFAa,EAD0BR,EAAQP,eACE3F,KAAK8F,EAAe,IAEjD,CACLW,cAAeC,EACf7B,aAAcsB,EACdrB,cAAesB,IAINO,GAAc,SAACV,EAAOC,GAMjC,MAJgB,CACdU,OAFwBX,EAAlBJ,cAGNgB,OAAQX,IA+BCY,GAAc,SAAAb,GAAU,IAC3BpB,EAA+CoB,EAA/CpB,aAAc4B,EAAiCR,EAAjCQ,cAAe3B,EAAkBmB,EAAlBnB,cAC/BqB,EAAe,YAAOtB,GACtB6B,EAAgB,YAAOD,GACvBL,EAAgB,YAAOtB,GAEvBiC,EAAWd,EAAMe,cAAc3G,MAC/B4G,EAAqBxB,GAAQsB,EAASH,QAGtCM,EApCyB,SAC/BC,EACAN,EACAV,EACAO,EACAN,GAEA,IAAIgB,EAEJ,GAAmB,aAAfD,EAA2B,CAC7B,IAAME,EAAkBR,EAAOnB,cAC/B0B,EAAoB,CAAChB,EAAiBiB,IACtCjB,EAAiBiB,GAAmB,UAC/B,GAAmB,aAAfF,EAA2B,CAEpCC,EAAoBV,EADIG,EAAOlB,eACuBR,QAAQ,EAAG,QAC5D,GAAmB,YAAfgC,EAA0B,CAEnCC,EAAoBjB,EADIU,EAAO9B,aACsBI,OACnD0B,EAAO7B,MACP6B,EAAOS,YAGX,OAAOF,EAauBG,CAFH9B,GAAQsB,EAASF,QAI1CE,EAASF,OACTV,EACAO,EACAN,GAGF,GAA2B,aAAvBa,EAEFb,EADwBW,EAASH,OAAOlB,eACJwB,EAAsB,QACrD,GAA2B,YAAvBD,EAAkC,CAAC,IAAD,GAE3C,EAAAd,EADwBY,EAASH,OAAO7B,cACP/E,KAAjC,oBAAyCkH,IAG3C,MAAO,CACLpC,cAAesB,EACfK,cAAeC,EACf7B,aAAcsB,IAmElB,SAASqB,GAA0B3C,EAAc/F,GAC/C,OAAO+F,EAAa/F,EAAKiG,aAAajF,OAAS,IAAMhB,EAAKkG,MAQ5D,SAASyC,GAAY3I,GACnB,MAA4B,qBAAdA,EAAKA,MAAsC,OAAdA,EAAKA,KAG3C,IAAM4I,GAAU,SAAAzB,GACrB,IAAIpB,EAAY,YAAOoB,EAAMpB,cACzB4B,EAAa,YAAOR,EAAMQ,eAC1B3B,EAAa,YAAOmB,EAAMnB,eAE1B6C,EDnLC,SAAiBC,GACtB,IAAK,IAAI/H,EAAI+H,EAAM9H,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIX,KAAKG,MAAMH,KAAKI,UAAYK,EAAI,IADC,EAEjB,CAAC+H,EAAM7H,GAAI6H,EAAM/H,IAAvC+H,EAAM/H,GAFiC,KAE7B+H,EAAM7H,GAFuB,KAI3C,OAAO6H,EC8KqBC,CA7E9B,SAAqChD,EAAcC,GAEjD,IADA,IAAI6C,EAAwB,GACnB5C,EAAc,EAAGA,EAAcF,EAAa/E,OAAQiF,IAC3D,GAAyC,IAArCF,EAAaE,GAAajF,QAI9B,IACE,IAAIkF,EAAQH,EAAaE,GAAajF,OAAS,EAC/CkF,GAAS,EACTA,IAEA,GAAIJ,GAAYC,EAAcC,EAAeC,EAAaC,GAA1D,CAAmE,IAAD,EAC1CH,EAAaE,GAAaC,GAAOM,MAAM,KADG,mBACzDC,EADyD,KAClDC,EADkD,KAEhEmC,EAAsB3H,KAAK,CACzB+E,cACAC,QACAlG,KAAM,CAAEyG,QAAOC,gBAbnBmC,EAAsB3H,KAAK,CAAE+E,cAAaC,MAAO,IAoBrD,OAAO2C,EAsDLG,CAA4BjD,EAAcC,IAG5CA,EAlDF,SAA6BA,GAC3B,OAAOA,EAAcO,KAAI,SAACvG,EAAM4G,GAAP,MAA0B,CACjDA,gBACA5G,WA+CciJ,CAAoBjD,GAEpC2B,EAzCF,SAA6BA,GAC3B,OAAOA,EAAcpB,KAAI,SAACvG,EAAM6G,GAC9B,GAAoB,IAAhB7G,EAAKgB,OAAc,MAAO,CAAE6F,gBAAe7G,QADC,MAE1BA,EAAKA,EAAKgB,OAAS,GAAGwF,MAAM,KAFF,mBAGhD,MAAO,CACLK,gBACA7G,KAAM,CAAEyG,MALsC,KAK/BC,KAL+B,UAwClCwC,CAAoBvB,GAIpC,IAFA,IAAIwB,EAAO,GAEFpI,EAAI,EAAGA,EAAI8H,EAAsB7H,OAAQD,IAAK,CACrD,IAAMqI,EAAcP,EAAsB9H,GAC1C,IAAI4H,GAAYS,GAChB,IAAK,IAAInI,EAAI,EAAGA,EAAI0G,EAAc3G,OAAQC,IAAK,CAC7C,IAAMoI,EAAe1B,EAAc1G,GACnC,GACgC,IAA7BoI,EAAarJ,KAAKgB,QAA2C,MAA3BoI,EAAYpJ,KAAKyG,OACnDzB,GAAWoE,EAAYpJ,KAAK0G,KAAM2C,EAAarJ,KAAK0G,OACnDtB,GACEgE,EAAYpJ,KAAKyG,MACjB4C,EAAarJ,KAAKyG,QAEpBiC,GAA0B3C,EAAcqD,GAW1C,OATAD,EAAO,CACL,CACElD,YAAamD,EAAYnD,YACzBC,MAAOkD,EAAYlD,OAErB,CACEW,cAAewC,EAAaxC,iBAStC,IAAK,IAAI9F,EAAI,EAAGA,EAAI8H,EAAsB7H,OAAS,EAAGD,IAAK,CACzD,IAAMuI,EAAeT,EAAsB9H,GAE3C,IAAI4H,GAAYW,GAEhB,IAAK,IAAIrI,EAAIF,EAAI,EAAGE,EAAI4H,EAAsB7H,OAAQC,IAAK,CACzD,IAAMsI,EAAeV,EAAsB5H,GAE3C,IAAI0H,GAAYY,KAEd1E,GAAqByE,EAAatJ,KAAK0G,KAAM6C,EAAavJ,KAAK0G,QAC7DtB,GACAkE,EAAatJ,KAAKyG,MAClB8C,EAAavJ,KAAKyG,QAElBiC,GAA0B3C,EAAcuD,IACvClE,GACCmE,EAAavJ,KAAKyG,MAClB6C,EAAatJ,KAAKyG,QAElBiC,GAA0B3C,EAAcwD,KAC5CD,EAAarD,cAAgBsD,EAAatD,aAY1C,OAVAkD,EAAO,CACL,CACElD,YAAaqD,EAAarD,YAC1BC,MAAOoD,EAAapD,OAEtB,CACED,YAAasD,EAAatD,YAC1BC,MAAOqD,EAAarD,SAW9B,IAAK,IAAInF,EAAI,EAAGA,EAAI8H,EAAsB7H,OAAQD,IAEhD,IADA,IAAMqI,EAAcP,EAAsB9H,GACjCE,EAAI,EAAGA,EAAI+E,EAAchF,OAAQC,IAAK,CAC7C,IAAMuI,EAAexD,EAAc/E,GAEnC,GADAwI,QAAQC,IAAIN,EAAaI,GAEtBb,GAAYS,KAAiBT,GAAYa,KACxCb,GAAYS,IACZT,GAAYa,IACZd,GAA0B3C,EAAcqD,GAW1C,OATAD,EAAO,CACL,CACElD,YAAamD,EAAYnD,YACzBC,MAAOkD,EAAYlD,OAErB,CACEU,cAAe4C,EAAa5C,gBAI3B,GACL8B,GAA0B3C,EAAcqD,IACxCvE,GAAqBuE,EAAYpJ,KAAK0G,KAAM8C,EAAaxJ,KAAK0G,OAC9DtB,GAAoBgE,EAAYpJ,KAAKyG,MAAO+C,EAAaxJ,KAAKyG,OAW9D,OATA0C,EAAO,CACL,CACElD,YAAamD,EAAYnD,YACzBC,MAAOkD,EAAYlD,OAErB,CACEU,cAAe4C,EAAa5C,gBAStC,IAAK,IAAI7F,EAAI,EAAGA,EAAI8H,EAAsB7H,OAAQD,IAEhD,IADA,IAAMuI,EAAeT,EAAsB9H,GAClCE,EAAIF,EAAI,EAAGE,EAAI4H,EAAsB7H,OAAQC,IAAK,CACzD,IAAMsI,EAAeV,EAAsB5H,GAC3C,GACG0H,GAAYW,KAAkBX,GAAYY,KACzCZ,GAAYW,IAAiBX,GAAYY,GAY3C,OAVAJ,EAAO,CACL,CACElD,YAAaqD,EAAarD,YAC1BC,MAAOoD,EAAapD,OAEtB,CACED,YAAasD,EAAatD,YAC1BC,MAAOqD,EAAarD,QAQ9B,OAAOiD,G,6jBCjXT,IAAMQ,GAAoB9J,KAEpB+J,GAAgB,CACpBC,iBAAkBF,GAAkBpD,KAAI,SAAAuD,GAAK,OAAIA,EAAMC,WACvDhE,aAAc4D,GAAkBpD,KAAI,SAAAuD,GAAK,OAAIA,EAAMC,WACnD7B,cAAe,GACflC,cAAe,CAAC,KAAM,KAAM,KAAM,MAClC2B,cAAe,CAAC,GAAI,GAAI,GAAI,IAC5BZ,cAAe,KACfiD,KAAM,CACJC,OAAQ,EACRC,KAAM,EACNf,KAAM,IAERgB,UAAU,GAsHGC,GAnHS,WAAoC,IAAnCjD,EAAkC,uDAA1ByC,GAAeS,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKC,EAAcvL,UACjB,OAAO,GAAP,GACKmI,EADL,CAEEJ,cAAesD,EAAOjD,QACtB4C,KAAK,GAAD,GACC7C,EAAM6C,KADP,CAEFb,KAAM,OAGZ,KAAKoB,EAActL,oBACjB,OAAO,GAAP,GACKkI,EADL,CAEEJ,cAAe,OAEnB,KAAKwD,EAAcrL,UACjB,OAAO,GAAP,GACKiI,EADL,GAEKD,GAASC,EAAOkD,EAAOjD,SAF5B,CAGEc,cAAc,GAAD,mBACRf,EAAMe,eADE,CAEXL,GAAYV,EAAOkD,EAAOjD,aAGhC,KAAKmD,EAAcpL,uBACjB,OAAO,GAAP,GACKgI,EADL,GAEKM,GAAmBN,EAAOkD,EAAOjD,SAFtC,CAGEc,cAAc,GAAD,mBACRf,EAAMe,eADE,CAEXL,GAAYV,EAAOkD,EAAOjD,aAGhC,KAAKmD,EAAcnL,uBACjB,OAAO,GAAP,GACK+H,EADL,GAEKO,GAAmBP,EAAOkD,EAAOjD,SAFtC,CAGEc,cAAc,GAAD,mBACRf,EAAMe,eADE,CAEXL,GAAYV,EAAOkD,EAAOjD,aAGhC,KAAKmD,EAAclL,iBACjB,IAAMwK,EAAmBhK,KACzB,OAAO,GAAP,GACKsH,EADL,CAEE0C,iBAAkBA,EAAiBtD,KAAI,SAAAuD,GAAK,OAAIA,EAAMC,WACtDhE,aAAc8D,EAAiBtD,KAAI,SAAAuD,GAAK,OAAIA,EAAMC,WAClD/D,cAAe,CAAC,KAAM,KAAM,KAAM,MAClC2B,cAAe,CAAC,GAAI,GAAI,GAAI,IAC5BO,cAAe,GACf8B,KAAM,CACJC,OAAQ,EACRC,KAAM,EACNf,KAAM,MAGZ,KAAKoB,EAAchL,SACjB,OAAO,GAAP,GACK4H,EADL,CAEEpB,aAAc,GACdC,cAAe,CAAC,KAAM,KAAM,KAAM,QAEtC,KAAKuE,EAAc/K,YACjB,MAAuB,UAAnB6K,EAAOjD,QACF,GAAP,GACKD,EADL,CAEEgD,UAAU,IAGP,GAAP,GACKhD,EADL,CAEEgD,UAAWhD,EAAMgD,WAErB,KAAKI,EAAc9K,cACjB,OAAO,GAAP,GACK0H,EADL,GAEKa,GAAYb,EAAOkD,EAAOjD,UAEjC,KAAKmD,EAAcjL,kBACjB,OAAO,GAAP,GACK6H,EADL,CAEEpB,aAAcoB,EAAM0C,iBAAiBtD,KAAI,SAAAuD,GAAK,OAAIA,EAAMC,WACxD/D,cAAe,CAAC,KAAM,KAAM,KAAM,MAClC2B,cAAe,CAAC,GAAI,GAAI,GAAI,IAC5BqC,KAAM,CACJC,OAAQ,EACRC,KAAM,EACNf,KAAM,MAGZ,KAAKoB,EAAc5K,aACjB,OAAO,GAAP,GACKwH,EADL,CAEE6C,KAAK,GAAD,GAAO7C,EAAM6C,KAAb,CAAmBE,KAAM/C,EAAM6C,KAAKE,KAAO,MAEnD,KAAKK,EAAc3K,qBACjB,OAAO,GAAP,GACKuH,EADL,CAEE6C,KAAK,GAAD,GAAO7C,EAAM6C,KAAb,CAAmBC,OAAQ9C,EAAM6C,KAAKC,OAAS,MAEvD,KAAKM,EAAc7K,SACjB,OAAO,GAAP,GACKyH,EADL,CAEE6C,KAAK,GAAD,GACC7C,EAAM6C,KADP,CAEFb,KAAMP,GAAQzB,OAGpB,QACE,OAAOA,ICpIEqD,GAJKC,YAAgB,CAClCC,SAAUN,KCMCO,IALEC,yBAKMC,YAAYL,GAAaM,IAAe,WAAf,EAF1B,M,6FCNPC,I,MAAW,SAAA3D,GAAO,MAAK,CAClCkD,KAAMC,EAAcvL,UACpBoI,QAASA,KAGE4D,GAAoB,iBAAO,CACtCV,KAAMC,EAActL,sBAGTiI,GAAW,SAAAE,GAAO,MAAK,CAClCkD,KAAMC,EAAcrL,UACpBkI,QAASA,IAqBE6D,GAAa,SAAA7D,GAAO,MAAK,CACpCkD,KAAMC,EAAc/K,YACpB4H,QAASA,I,SC9BE8D,GAAkBC,cAJV,SAAAhE,GAAK,OAAIA,EAAMuD,SAAS3E,gBACvB,SAAAoB,GAAK,OAAIA,EAAMuD,SAAS1E,iBAM5C,SAACD,EAAcC,GAUb,OATyBD,EAAaqF,QACpC,SAACxF,EAAOyF,GAAR,OAAgBzF,EAAQyF,EAAIrK,SAC5B,GAGyBgF,EAAcoF,QACvC,SAACxF,EAAOyF,GAAR,OAAgBzF,GAAiB,OAARyF,EAAe,EAAI,KAC5C,KAE+C,KCwBtCC,IDpBsBH,cAnBf,SAAAhE,GAAK,OAAIA,EAAMuD,SAASxC,iBAqB5C,SAAAA,GAAa,OAAIA,EAAclH,OAAS,KCjB3B,WACb,IAAMuK,EAAYC,YAAYN,IACxBO,EAAaD,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKC,UACtDyB,EAAWF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKE,QACpDyB,EAAWC,cAJE,EAKOC,mBAAS,MALhB,mBAKZC,EALY,KAKLC,EALK,KAoBnB,OAbAC,qBAAU,WACHT,EAOHU,cAAcH,GANdC,EACEG,aAAY,WACVP,EF4BwB,CAChCrB,KAAMC,EAAc5K,iBE5BX,QAMN,CAAC4L,IAGF,yBAAKY,UAAU,UACXZ,EAOA,qCANA,oCACE,0BAAMY,UAAU,kBAAkBV,GAClC,yBAAKW,IAAKC,KAASC,IAAI,UAAUH,UAAU,oBAC3C,0BAAMA,UAAU,gBAAgB5G,GAAQmG,QClCrCa,I,kBACD,YCYNC,GAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMzM,EAAuB,EAAvBA,KAAM0M,EAAiB,EAAjBA,WAC1B,OACE,yBACEC,IAAKF,EACLN,UAAU,uBACVS,MAAO,CACLC,gBAAgB,OAAD,OAASrL,GAAYxB,GAArB,KACf8M,QAASJ,EAAa,EAAI,MAmDnBK,GA7CM,SAAAC,GAAU,IACrBhN,EAAgBgN,EAAhBhN,KAAMkG,EAAU8G,EAAV9G,MACRyF,EAAWC,cAIXqB,EAFOzB,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKb,QAEhC+D,MAAK,SAAAC,GAAC,OAAIA,EAAEvG,gBAAkBV,KANxB,EAQYkH,aAAQ,CAC9CC,KAAM,CAAE/C,KAAMiC,IACde,MAAO,kBACL3B,EAASZ,GAAS,CAAEnE,cAAeV,EAAOlG,OAAMwI,WAAY,MAC9D+E,IAAK,SAACF,EAAMG,GAAP,OAAmB7B,EAASX,OACjCyC,QAAS,kBAAe,OAATzN,GACf0N,QAAS,SAAAF,GAAO,MAAK,CACnBd,WAAYc,EAAQd,iBAfI,mBAQnBA,EARmB,KAQnBA,WAAcD,EARK,KAQCkB,EARD,KAkB5B3B,qBAAU,WACR2B,EAAQC,eAAiB,CAAEC,sBAAsB,MAEhD,IArByB,IA6BxBC,EA7BwB,EAuBXC,aAAQ,CACvBC,OAAQzB,GACR0B,QAAS,kBAAe,OAATjO,GACfkO,KAAM,kBAAMvC,EJpC8B,CAC5CrB,KAAMC,EAAcpL,uBACpBiI,QIkC0C,CAAER,cAAeV,QAHlDgI,EAvBmB,oBAkC5B,OAJIlO,IACF8N,EAAU,kBAAC,GAAD,CAAMrB,KAAMA,EAAMzM,KAAMA,EAAM0M,WAAYA,KAIpD,yBACEC,IAAKuB,EACL/B,UAAW,mBAAqBc,EAAW,uBAAyB,IACpEkB,IAAG,eAAUjI,IAEZ4H,ICjDQM,GAZG,WAChB,IAAMpI,EAAgBwF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS1E,iBAE1D,OACE,yBAAKmG,UAAU,cACZnG,EAAcO,KAAI,SAACvG,EAAMkG,GAAP,OACjB,kBAAC,GAAD,CAAclG,KAAMA,EAAMkG,MAAOA,EAAOiI,IAAG,oBAAejI,UC2CnDmI,I,YA3CM,SAAArB,GAAU,IACrBhN,EAAgBgN,EAAhBhN,KAAMkG,EAAU8G,EAAV9G,MAERyF,EAAWC,cAEX7E,EAAgByE,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3D,iBAGpDkG,EADOzB,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKb,QAChC+D,MAAK,SAAAC,GAAC,OAAIA,EAAEtG,gBAAkBX,KARxB,EAUX6H,aAAQ,CACvBC,OAAQzB,GACR0B,QAAS,kBXwTN,SAAyBlH,EAAe/G,GAAO,IAAD,EACH+G,EAAcP,MAAM,KADjB,mBAC5C8H,EAD4C,KACxBC,EADwB,KAGnD,GAAoB,qBAATvO,GACT,GAA2B,MAAvBsO,EACF,OAAO,MAEJ,CAAC,IAAD,EACyBtO,EAAKwG,MAAM,KADpC,mBACEtB,EADF,KAEL,GACEF,GAAWuJ,EAHR,OAIHnJ,GAAoBkJ,EAAoBpJ,GAExC,OAAO,EAGX,OAAO,EWxUUsJ,CAAgBzH,EAAc/G,KAAMA,EAAKA,EAAKgB,OAAS,KACtEkN,KAAM,WACJvC,ENJwC,CAC5CrB,KAAMC,EAAcnL,uBACpBgI,QMEgC,CAAEP,cAAeX,KAC7CyF,ENyBmC,CACvCrB,KAAMC,EAAc3K,0BM/BXsO,EAVmB,oBAmBxBJ,EACF9N,EAAKgB,OAAS,EACZ,yBACEmN,IAAKnO,EACLmM,UAAU,uBACVS,MAAO,CACLC,gBAAgB,OAAD,OAASrL,GAAYxB,EAAKA,EAAKgB,OAAS,IAAxC,QAInB,IAGJ,OACE,yBACE2L,IAAKuB,EACL/B,UAAW,mBAAqBc,EAAW,uBAAyB,IACpEkB,IAAG,eAAUjI,IAEZ4H,KChCQW,GAZG,WAChB,IAAM9G,EAAgB6D,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS/C,iBAE1D,OACE,yBAAKwE,UAAU,cACZxE,EAAcpB,KAAI,SAACvG,EAAMkG,GAAP,OACjB,kBAAC,GAAD,CAAclG,KAAMA,EAAMkG,MAAOA,EAAOiI,IAAG,oBAAejI,U,4BCPlE,SAASwI,GAAU1O,EAAM2O,EAAQV,EAASW,GACxC,MAAO,CACL/B,gBAAgB,OAAD,OAASrL,GAAYxB,GAArB,KACf6O,OAAQF,GAAUV,GAAWW,EAAgB,oBAAsB,GACnEE,aAAcH,GAAUV,GAAWW,EAAgB,OAAS,IAIhE,IAWepC,GAXF,SAAAQ,GAAU,IACbhN,EAAyCgN,EAAzChN,KAAM4O,EAAmC5B,EAAnC4B,cAAeD,EAAoB3B,EAApB2B,OAAQV,EAAYjB,EAAZiB,QACrC,OACE,yBACE9B,UAAU,OACVS,MAAO8B,GAAU1O,EAAM2O,EAAQV,EAASW,GACxCT,IAAKnO,KCJX,SAAS+O,GAAOC,EAAY9I,GAC1B,GAAI8I,EAAa,IACf,GAAIA,EAAa9I,EAAQ,EACvB,OAAO,QAGT,GAAI8I,EAAa9I,EAAQ,EACvB,OAAO,GAIX,OAAO,GAGT,SAAS+I,GAASD,EAAY9I,EAAOwG,GACnC,MAAO,CACLwC,IAAe,IAAVhJ,EAAc,MAAQ6I,GAAOC,EAAY9I,GAAS,KACvDiJ,MAAO,QACPC,OAAQ1C,EACJ,EACAqC,GAAOC,EAAY9I,IAAU8I,EAAa9I,EAAQ,GAAK,IAAM,KACjE4G,QAASJ,EAAa,EAAI,GAI9B,IAiFe2C,GAjFS,SAAArC,GAAU,IAE9BsC,EAKEtC,EALFsC,OAF6B,EAO3BtC,EAJFhN,KAAQA,EAHqB,EAGrBA,KAAMkG,EAHe,EAGfA,MACdD,EAGE+G,EAHF/G,YACA+I,EAEEhC,EAFFgC,WACAJ,EACE5B,EADF4B,cAEIjD,EAAWC,cAEX7E,EAAgByE,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3D,iBACpDhB,EAAeyF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3E,gBACnDC,EAAgBwF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS1E,iBAGpDiH,EADOzB,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKb,QAChC+D,MACpB,SAAAC,GAAC,OAAIA,EAAElH,cAAgBA,GAAekH,EAAEjH,QAAUA,KAhBrB,EAmBSkH,aAAQ,CAC9CC,KAAM,CAAE/C,KAAMiC,IACde,MAAO,kBACL3B,EACEZ,GAAS,CAAE/K,OAAMiG,cAAaC,QAAOsC,WAAYwG,EAAa9I,MAElEqH,IAAK,kBAAM5B,EAASX,OACpByC,QAAS,SAAAD,GAAO,OACd1H,GAAYC,EAAcC,EAAeC,EAAaC,IACxDwH,QAAS,SAAAF,GAAO,MAAK,CACnBd,aAAcc,EAAQd,iBA7BK,mBAmBtBA,EAnBsB,KAmBtBA,WAAcD,EAnBQ,KAmBFkB,EAnBE,KAgC/B3B,qBAAU,WACR2B,EAAQC,eAAiB,CAAEC,sBAAsB,MAEhD,IAnC4B,MAqCKE,aAAQ,CAC1CC,OAAQzB,GACR0B,QAAS,kBd0ON,SAAqBlH,EAAe/G,GACzC,GAAI+G,EAAcd,cAAgBjG,EAAKiG,YAAa,OAAO,EADZ,MAGCc,EAAc/G,KAAKwG,MAAM,KAH1B,mBAGxC8H,EAHwC,KAGpBC,EAHoB,OAIjBvO,EAAKA,KAAKwG,MAAM,KAJC,mBAIxCtB,EAJwC,KAI7BqK,EAJ6B,KAM/C,QAAIhB,IAAsBgB,GAAYjB,IAAuBpJ,IAEzDL,GAAqB0J,EAAmBgB,KACxCnK,GAAoBF,EAAWoJ,IcnPlBkB,CAAYzI,EAAe,CAAE/G,OAAMiG,cAAaC,WAC/DgI,KAAM,WACJvC,EACEzE,GAAS,CACPjB,cACAC,MAAOA,EAAQ,EACfsC,WAAYzB,EAAcyB,eAIhCkF,QAAS,SAAAF,GAAO,MAAK,CACnBmB,SAAUnB,EAAQmB,SAClBV,UAAWT,EAAQS,cAnDQ,0BAqCtBU,EArCsB,EAqCtBA,OAAQV,EArCc,EAqCdA,QAAWC,EArCG,KAuDzBuB,EAAW,CAAE9C,IAAKF,GAKxB,OAJI1F,GAAiBA,EAAc/G,OAASA,IAC1CyP,EAAS9C,IAAMuB,GAIf,yCACMuB,EADN,CAEEtD,UACE,qBAAuBc,EAAW,yBAA2B,IAE/DL,MAAOqC,GAASD,EAAY9I,EAAOwG,KAEnC,kBAAC,GAAD,CACE1M,KAAMA,EACN4O,cAAeA,EACfI,WAAYA,EACZL,OAAQA,EACRV,QAASA,EACTvB,WAAYA,IAEb4C,I,OC5GP,SAASZ,GAAUC,GACjB,MAAO,CACLE,OAAQF,EAAS,oBAAsB,GACvCG,aAAcH,EAAS,OAAS,IAIpC,IAiCee,GAjCQ,SAAC,GAAqB,IAAnBzJ,EAAkB,EAAlBA,YAClB0F,EAAWC,cAEX7E,EAAgByE,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3D,iBAGpDkG,EADOzB,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKb,QAChC+D,MAAK,SAAAC,GAAC,OAAIA,EAAElH,cAAgBA,KANR,EAQf8H,aAAQ,CACjCC,OAAQzB,GACR2B,KAAM,WACJvC,EACEzE,GAAS,CACPjB,cACAC,MAAO,EACPsC,WAAYzB,EAAcyB,eAIhCkF,QAAS,SAAAF,GAAO,MAAK,CACnBmB,SAAUnB,EAAQmB,aApBoB,mBAQjCA,EARiC,KAQjCA,OAAUT,EARuB,KAwB1C,OACE,yBACEvB,IAAKuB,EACL/B,UAAW,oBAAsBc,EAAW,wBAA0B,IACtEL,MAAO8B,GAAUC,MCTRgB,GA5BO,SAAA3C,GAAU,IACtBlM,EAAuBkM,EAAvBlM,MAAOmF,EAAgB+G,EAAhB/G,YAEf,OACE,yBAAKkG,UAAU,kBACZrL,EAAME,OAAS,EACdF,EACGyF,KAAI,SAACvG,EAAMkG,GAAP,MAAkB,CAAElG,OAAMkG,YAC9BI,UACA8E,QACC,SAACkE,EAAQtP,GAAT,OACE,kBAAC,GAAD,CACEsP,OAAQA,EACRN,WAAYlO,EAAME,OAClBhB,KAAMA,EACNiG,YAAaA,EACb2I,cAAe5O,EAAKkG,QAAUpF,EAAME,OAAS,MAGjD,MAGJ,kBAAC,GAAD,CAAgBiF,YAAaA,MCNtB2J,GAhBC,WACd,IAAM7J,EAAeyF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3E,gBAEzD,OACE,yBAAKoG,UAAU,WACZpG,EAAaQ,KAAI,SAACzF,EAAOoF,GAAR,OAChB,kBAAC,GAAD,CACEiI,IAAG,kBAAajI,GAChBpF,MAAOA,EACPmF,YAAaC,S,oBCWR2J,I,cAnBW,WACxB,IAAMlE,EAAWC,cAOjB,OACE,yBAAKO,UAAU,mBAAmB2D,QANN,WAC5BnE,EbiCkC,CACpCrB,KAAMC,EAAcjL,oBajClBqM,EAASV,GAAW,YAKlB,mDACA,yBACEkB,UAAU,yBACVS,MAAO,CAAEC,gBAAgB,OAAD,OAASkD,KAAT,W,6BCMjBC,GAnBO,WACpB,IAAMrE,EAAWC,cAOjB,OACE,yBAAKO,UAAU,eAAe2D,QANJ,WAC1BnE,EdgBgC,CAClCrB,KAAMC,EAAclL,mBchBlBsM,EAASV,GAAW,YAKlB,kDACA,yBACEkB,UAAU,qBACVS,MAAO,CAAEC,gBAAgB,OAAD,OAASoD,KAAT,UCiBjBC,GA3BK,WAClB,IAAMxE,EAAWF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKE,QACpDiG,EAAY3E,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASV,KAAKC,UAE3D,OACE,yBAAKkC,UAAU,YACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,yBACb,yBAAKC,IAAKC,KAASC,IAAI,YACvB,4BAAK6D,GACL,yBAAK/D,IAAKC,KAASC,IAAI,aAEzB,yBAAKH,UAAU,uBACb,yBAAKC,IAAKgE,KAAM9D,IAAI,SACpB,4BAAK/G,GAAQmG,MAGjB,yBAAKS,UAAU,wBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,U,OCrBV,SAASuC,GAAU1O,EAAMkG,GACvB,MAAO,CACL2G,gBAAgB,OAAD,OAASrL,GAAYxB,GAArB,KACfkP,IAAK,GAAKhJ,EAAQ,MAGtB,IAAMmK,GAAc,SAAC,GAAqB,IAAnBrQ,EAAkB,EAAlBA,KAAMkG,EAAY,EAAZA,MAC3B,OACE,yBACEiG,UAAU,gCACVgC,IAAKnO,EACL4M,MAAO8B,GAAU1O,EAAMkG,MAoCdoK,GAhCS,SAAAtD,GACtB,IAnBuBxE,EAmBjBzC,EAAeyF,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAAS3E,gBAG/CqB,EACN4F,EADFhN,KAAQoH,QAkBV,OACE,yBACE+E,UAAU,oBACVS,OA3CmBpE,EA2CIpB,EAAQoB,WA1C5B,CAAE4G,OAAQ,IAAM5G,EAAa,GAAK,IAAM,QAwB5B,SAAApB,GACjB,MAAmC,qBAAxBA,EAAQnB,YAEf,oCACG,YAAIF,EAAaqB,EAAQnB,cACvBI,OAAOe,EAAQlB,MAAOkB,EAAQoB,YAC9BjC,KAAI,SAACvG,EAAMkG,GAAP,OACH,kBAAC,GAAD,CAAalG,KAAMA,EAAMkG,MAAOA,EAAOiI,IAAKnO,QAIV,qBAA1BoH,EAAQR,cACjB,kBAAC,GAAD,CAAa5G,KAAMoH,EAAQpH,KAAMkG,MAAO,SAD1C,EASJqK,CAAWnJ,KC7CZoJ,GAAc,CAClBC,SAAU,QACVC,cAAe,OACfC,OAAQ,IACRC,KAAM,EACN1B,IAAK,EACLC,MAAO,OACPC,OAAQ,QAEV,SAASyB,GAAcC,EAAeC,GACpC,IAAKD,IAAkBC,EACrB,MAAO,CACLC,QAAS,QAHsC,IAM7CC,EAASF,EAATE,EAAGC,EAAMH,EAANG,EAEHC,EAAS,oBAAgBF,EAAhB,eAAwBC,EAAxB,OACf,MAAO,CACLC,YACAC,gBAAiBD,GAGrB,IAmCeE,GAnCS,SAAArE,GAAU,IAAD,EAO3BsE,cAAa,SAAA9D,GAAO,MAAK,CAC3BH,KAAMG,EAAQ+D,UACdC,SAAUhE,EAAQiE,cAClBX,cAAetD,EAAQkE,+BACvBX,cAAevD,EAAQmE,wBACvBjF,WAAYc,EAAQd,iBAVpB8E,EAF6B,EAE7BA,SACA9E,EAH6B,EAG7BA,WACAW,EAJ6B,EAI7BA,KACAyD,EAL6B,EAK7BA,cACAC,EAN6B,EAM7BA,cAiBF,OAAKrE,EAIH,yBAAKE,MAAO4D,IACV,yBAAK5D,MAAOiE,GAAcC,EAAeC,IAb1B,WACjB,OAAQS,GACN,KAAKjF,GACH,OAAO,kBAAC,GAAD,CAAiBvM,KAAMqN,IAChC,QACE,OAAO,MASNuE,KALE,MC3BIC,GAfG,WAChB,IAAMtG,EAAYC,YAAYN,IAE9B,OACE,yBAAKiB,UAAU,cACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,uBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEDZ,EAAY,kBAAC,GAAD,MAAkB,kBAAC,GAAD,Q,oCCQtBuG,GAnBO,WACpB,IAAMnG,EAAWC,cAOjB,OACE,yBAAKO,UAAU,eAAe2D,QANV,WACpBnE,EnBiB0B,CAC5BrB,KAAMC,EAAchL,WmBjBlBoM,EAASV,QAKP,0CACA,yBACEkB,UAAU,qBACVS,MAAO,CAAEC,gBAAgB,OAAD,OAASkF,KAAT,UCFjBC,GAbF,WACX,IAAMC,EAASzG,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASP,YACnD,OACE,yBAAKgC,UAAS,eAAU8F,EAAS,eAAiB,KAChD,yBAAK9F,UAAU,iBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,SC6DO+F,GA1DE,WACf,IAAMvG,EAAWC,cACXzB,EAAWqB,aAAY,SAAArE,GAAK,OAAIA,EAAMuD,SAASP,YAC/CgI,EAAiB3G,aACrB,SAAArE,GAAK,OAAIA,EAAMuD,SAASxC,cAAclH,OAAS,KAE3CuK,EAAYC,YAAYN,IAExBkH,EAAmB,WACvBzG,EAASV,OAaX,OACE,yBAAKkB,UAAU,aACb,4BAAQA,UAAU,qBAChB,yBAAKA,UAAU,mBAAf,YACA,kBAAC,GAAD,MACA,yBACEA,UAAS,0BACPhC,EAAW,0BAA4B,IAEzC2F,QAASsC,GAET,iCAGJ,kBAAC,GAAD,CAAMH,OAAQ9H,EAAUiI,iBAAkBA,IAC1C,yBAAKjG,UAAU,yBACb,kBAAC,KAAD,CAAakG,QAASC,MACpB,kBAAC,GAAD,OAEF,yBAAKnG,UAAU,uBACb,yBAAKA,UAAU,kBAAkB2D,QAxBnB,WACpBnE,ErBmB0B,CAC5BrB,KAAMC,EAAc7K,aqBIV,gCACE,yBAAK0M,IAAKmG,KAAMjG,IAAI,kBAGxB,yBAAKH,UAAU,kBAAkB2D,QAnCf,WACpBqC,IAAmB5G,GACrBI,ErBQ4B,CAChCrB,KAAMC,EAAc9K,kBqByBV,gCACE,yBAAK2M,IAAK2D,KAAMzD,IAAI,sBCtDnBkG,OARf,WACE,OACE,yBAAKrG,UAAU,OACb,kBAAC,GAAD,QCKcsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAUpI,MAAOA,IACf,kBAAC,GAAD,OAEFqI,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.35a69078.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Diamond.31995290.svg\";","module.exports = __webpack_public_path__ + \"static/media/Back.e066850b.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Clubs.ab7bb5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Clubs.e4e26db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Clubs.892db90b.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Clubs.5b90a8c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Clubs.47f6c983.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Clubs.48832486.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Clubs.2ef336e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Clubs.d4104ecc.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Clubs.267dd350.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Clubs.d98b0a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Clubs.caa46bb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Clubs.baf9c346.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Clubs.0133363c.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Diamonds.d4e862c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Diamonds.6d650114.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Diamonds.bebcc8b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Diamonds.251f67f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Diamonds.0ba28f45.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Diamonds.4d9a975a.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Diamonds.5331b794.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Diamonds.2a6e62cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Diamonds.3fd0cedc.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Diamonds.4f39720c.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Diamonds.65f7a17a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Diamonds.0dc1bf7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Diamonds.fcb26db6.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Hearts.304bb6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Hearts.fb185d4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Hearts.f606a128.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Hearts.ac9215b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Hearts.68ee58f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Hearts.5f182f50.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Hearts.f5872bbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Hearts.3d92aa60.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Hearts.76e62b4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Hearts.74b1e4e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Hearts.6de610fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Hearts.9dc93f1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Hearts.1b5bfe88.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Spades.ca023df2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Spades.43f683bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Spades.858145f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Spades.588dcc75.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Spades.3c34f454.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Spades.0b965a7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Spades.11c46e38.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Spades.8f71dc86.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Spades.6399907c.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Spades.61874387.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Spades.8b41eabe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Spades.2d09b22a.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Spades.85240b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hint.9e78d091.svg\";","module.exports = __webpack_public_path__ + \"static/media/Time icon.260221fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Plus.e8151770.svg\";","module.exports = __webpack_public_path__ + \"static/media/Check.23cfd688.svg\";","const FreeCellTypes = {\r\n  DRAG_CARD: 'DRAG_CARD',\r\n  REMOVE_DRAGGED_CARD: 'REMOVE_DRAGGED_CARD',\r\n  DROP_CARD: 'DROP_CARD',\r\n  DROP_CARD_TO_FREE_CELL: 'DROP_CARD_TO_FREE_CELL',\r\n  DROP_CARD_TO_HOME_CELL: 'DROP_CARD_TO_HOME_CELL',\r\n  START_A_NEW_GAME: 'START_A_NEW_GAME',\r\n  RESTART_THIS_GAME: 'RESTART_THIS_GAME',\r\n  END_GAME: 'END_GAME',\r\n  TOGGLE_MENU: 'TOGGLE_MENU',\r\n  BACK_ONE_STEP: 'BACK_ONE_STEP',\r\n  GET_HINT: 'GET_HINT',\r\n  UPDATE_TIMER: 'UPDATE_TIMER',\r\n  INCREASE_GAME_POINTS: 'INCREASE_GAME_POINTS'\r\n}\r\n\r\nexport default FreeCellTypes\r\n","import Club_A from '../assets/img/cards/A_Clubs.svg'\r\nimport Club_2 from '../assets/img/cards/2_Clubs.svg'\r\nimport Club_3 from '../assets/img/cards/3_Clubs.svg'\r\nimport Club_4 from '../assets/img/cards/4_Clubs.svg'\r\nimport Club_5 from '../assets/img/cards/5_Clubs.svg'\r\nimport Club_6 from '../assets/img/cards/6_Clubs.svg'\r\nimport Club_7 from '../assets/img/cards/7_Clubs.svg'\r\nimport Club_8 from '../assets/img/cards/8_Clubs.svg'\r\nimport Club_9 from '../assets/img/cards/9_Clubs.svg'\r\nimport Club_10 from '../assets/img/cards/10_Clubs.svg'\r\nimport Club_J from '../assets/img/cards/J_Clubs.svg'\r\nimport Club_Q from '../assets/img/cards/Q_Clubs.svg'\r\nimport Club_K from '../assets/img/cards/K_Clubs.svg'\r\nimport Diamond_A from '../assets/img/cards/A_Diamonds.svg'\r\nimport Diamond_2 from '../assets/img/cards/2_Diamonds.svg'\r\nimport Diamond_3 from '../assets/img/cards/3_Diamonds.svg'\r\nimport Diamond_4 from '../assets/img/cards/4_Diamonds.svg'\r\nimport Diamond_5 from '../assets/img/cards/5_Diamonds.svg'\r\nimport Diamond_6 from '../assets/img/cards/6_Diamonds.svg'\r\nimport Diamond_7 from '../assets/img/cards/7_Diamonds.svg'\r\nimport Diamond_8 from '../assets/img/cards/8_Diamonds.svg'\r\nimport Diamond_9 from '../assets/img/cards/9_Diamonds.svg'\r\nimport Diamond_10 from '../assets/img/cards/10_Diamonds.svg'\r\nimport Diamond_J from '../assets/img/cards/J_Diamonds.svg'\r\nimport Diamond_Q from '../assets/img/cards/Q_Diamonds.svg'\r\nimport Diamond_K from '../assets/img/cards/K_Diamonds.svg'\r\nimport Heart_A from '../assets/img/cards/A_Hearts.svg'\r\nimport Heart_2 from '../assets/img/cards/2_Hearts.svg'\r\nimport Heart_3 from '../assets/img/cards/3_Hearts.svg'\r\nimport Heart_4 from '../assets/img/cards/4_Hearts.svg'\r\nimport Heart_5 from '../assets/img/cards/5_Hearts.svg'\r\nimport Heart_6 from '../assets/img/cards/6_Hearts.svg'\r\nimport Heart_7 from '../assets/img/cards/7_Hearts.svg'\r\nimport Heart_8 from '../assets/img/cards/8_Hearts.svg'\r\nimport Heart_9 from '../assets/img/cards/9_Hearts.svg'\r\nimport Heart_10 from '../assets/img/cards/10_Hearts.svg'\r\nimport Heart_J from '../assets/img/cards/J_Hearts.svg'\r\nimport Heart_Q from '../assets/img/cards/Q_Hearts.svg'\r\nimport Heart_K from '../assets/img/cards/K_Hearts.svg'\r\nimport Spade_A from '../assets/img/cards/A_Spades.svg'\r\nimport Spade_2 from '../assets/img/cards/2_Spades.svg'\r\nimport Spade_3 from '../assets/img/cards/3_Spades.svg'\r\nimport Spade_4 from '../assets/img/cards/4_Spades.svg'\r\nimport Spade_5 from '../assets/img/cards/5_Spades.svg'\r\nimport Spade_6 from '../assets/img/cards/6_Spades.svg'\r\nimport Spade_7 from '../assets/img/cards/7_Spades.svg'\r\nimport Spade_8 from '../assets/img/cards/8_Spades.svg'\r\nimport Spade_9 from '../assets/img/cards/9_Spades.svg'\r\nimport Spade_10 from '../assets/img/cards/10_Spades.svg'\r\nimport Spade_J from '../assets/img/cards/J_Spades.svg'\r\nimport Spade_Q from '../assets/img/cards/Q_Spades.svg'\r\nimport Spade_K from '../assets/img/cards/K_Spades.svg'\r\n\r\n/**\r\n * 亂數重新排列`array`\r\n * @param {Array} array\r\n */\r\nexport function shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\n// RNG\r\nfunction FreeCellRNG(seed) {\r\n  return {\r\n    lastNum: seed,\r\n    next() {\r\n      this.lastNum = (214013 * this.lastNum + 2531011) % Math.pow(2, 31)\r\n      return this.lastNum >> 16\r\n    }\r\n  }\r\n}\r\n// Get cards\r\nfunction getDeck() {\r\n  const ranks = [\r\n    'A',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '10',\r\n    'J',\r\n    'Q',\r\n    'K'\r\n  ]\r\n  const suits = ['Clubs', 'Diamonds', 'Hearts', 'Spades']\r\n  const cards = []\r\n  for (let i = 0; i < ranks.length; i += 1) {\r\n    for (let j = 0; j < suits.length; j += 1) {\r\n      cards.push(`${ranks[i]}_${suits[j]}`)\r\n    }\r\n  }\r\n  return cards\r\n}\r\n\r\n/**\r\n * 隨機產生52張不重複的卡片\r\n */\r\nexport function generateRandomCards() {\r\n  const seed = Math.floor(Math.random() * 1000000) + 1\r\n  const rng = FreeCellRNG(seed)\r\n  const deck = getDeck()\r\n\r\n  const deltCards = [[], [], [], [], [], [], [], []]\r\n  let currentColumn = 0\r\n  let currentRow = 0\r\n\r\n  let rand\r\n  let temp\r\n  let card\r\n  while (deck.length > 0) {\r\n    // Choose a random card\r\n    rand = rng.next() % deck.length\r\n\r\n    // Swap this random card with the last card in the array\r\n    temp = deck[deck.length - 1]\r\n    deck[deck.length - 1] = deck[rand]\r\n    deck[rand] = temp\r\n\r\n    // Remove this card from the array\r\n    card = deck.pop()\r\n\r\n    // Deal this card\r\n    deltCards[currentRow].push(card)\r\n    currentColumn += 1\r\n    if (currentColumn === 7 || (currentRow > 3 && currentColumn === 6)) {\r\n      currentColumn = 0\r\n      currentRow += 1\r\n    }\r\n  }\r\n\r\n  return deltCards\r\n}\r\n\r\nexport function getImageObj(card) {\r\n  if (card === 'A_Clubs') {\r\n    return Club_A\r\n  } else if (card === 'A_Diamonds') {\r\n    return Diamond_A\r\n  } else if (card === 'A_Hearts') {\r\n    return Heart_A\r\n  } else if (card === 'A_Spades') {\r\n    return Spade_A\r\n  } else if (card === '2_Clubs') {\r\n    return Club_2\r\n  } else if (card === '2_Diamonds') {\r\n    return Diamond_2\r\n  } else if (card === '2_Hearts') {\r\n    return Heart_2\r\n  } else if (card === '2_Spades') {\r\n    return Spade_2\r\n  } else if (card === '3_Clubs') {\r\n    return Club_3\r\n  } else if (card === '3_Diamonds') {\r\n    return Diamond_3\r\n  } else if (card === '3_Hearts') {\r\n    return Heart_3\r\n  } else if (card === '3_Spades') {\r\n    return Spade_3\r\n  } else if (card === '4_Clubs') {\r\n    return Club_4\r\n  } else if (card === '4_Diamonds') {\r\n    return Diamond_4\r\n  } else if (card === '4_Hearts') {\r\n    return Heart_4\r\n  } else if (card === '4_Spades') {\r\n    return Spade_4\r\n  } else if (card === '5_Clubs') {\r\n    return Club_5\r\n  } else if (card === '5_Diamonds') {\r\n    return Diamond_5\r\n  } else if (card === '5_Hearts') {\r\n    return Heart_5\r\n  } else if (card === '5_Spades') {\r\n    return Spade_5\r\n  } else if (card === '6_Clubs') {\r\n    return Club_6\r\n  } else if (card === '6_Diamonds') {\r\n    return Diamond_6\r\n  } else if (card === '6_Hearts') {\r\n    return Heart_6\r\n  } else if (card === '6_Spades') {\r\n    return Spade_6\r\n  } else if (card === '7_Clubs') {\r\n    return Club_7\r\n  } else if (card === '7_Diamonds') {\r\n    return Diamond_7\r\n  } else if (card === '7_Hearts') {\r\n    return Heart_7\r\n  } else if (card === '7_Spades') {\r\n    return Spade_7\r\n  } else if (card === '8_Clubs') {\r\n    return Club_8\r\n  } else if (card === '8_Diamonds') {\r\n    return Diamond_8\r\n  } else if (card === '8_Hearts') {\r\n    return Heart_8\r\n  } else if (card === '8_Spades') {\r\n    return Spade_8\r\n  } else if (card === '9_Clubs') {\r\n    return Club_9\r\n  } else if (card === '9_Diamonds') {\r\n    return Diamond_9\r\n  } else if (card === '9_Hearts') {\r\n    return Heart_9\r\n  } else if (card === '9_Spades') {\r\n    return Spade_9\r\n  } else if (card === '10_Clubs') {\r\n    return Club_10\r\n  } else if (card === '10_Diamonds') {\r\n    return Diamond_10\r\n  } else if (card === '10_Hearts') {\r\n    return Heart_10\r\n  } else if (card === '10_Spades') {\r\n    return Spade_10\r\n  } else if (card === 'J_Clubs') {\r\n    return Club_J\r\n  } else if (card === 'J_Diamonds') {\r\n    return Diamond_J\r\n  } else if (card === 'J_Hearts') {\r\n    return Heart_J\r\n  } else if (card === 'J_Spades') {\r\n    return Spade_J\r\n  } else if (card === 'Q_Clubs') {\r\n    return Club_Q\r\n  } else if (card === 'Q_Diamonds') {\r\n    return Diamond_Q\r\n  } else if (card === 'Q_Hearts') {\r\n    return Heart_Q\r\n  } else if (card === 'Q_Spades') {\r\n    return Spade_Q\r\n  } else if (card === 'K_Clubs') {\r\n    return Club_K\r\n  } else if (card === 'K_Diamonds') {\r\n    return Diamond_K\r\n  } else if (card === 'K_Hearts') {\r\n    return Heart_K\r\n  } else if (card === 'K_Spades') {\r\n    return Spade_K\r\n  }\r\n}\r\n\r\n/**\r\n * 判斷 `suitA` 與 `suitB` 是否為相反顏色的花色\r\n * @param {String} suitA\r\n * @param {String} suitB\r\n */\r\nexport function isDifferentColorSuit(suitA, suitB) {\r\n  if (\r\n    (suitA === 'Diamonds' || suitA === 'Hearts') &&\r\n    (suitB === 'Clubs' || suitB === 'Spades')\r\n  ) {\r\n    return true\r\n  } else if (\r\n    (suitA === 'Clubs' || suitA === 'Spades') &&\r\n    (suitB === 'Diamonds' || suitB === 'Hearts')\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 判斷卡片的花色是否一樣。\r\n * @param {String} suitA\r\n * @param {String} suitB\r\n */\r\nexport function isSameSuit(suitA, suitB) {\r\n  return suitA === suitB\r\n}\r\n\r\n/**\r\n * 取得卡片點數對應的數值。\r\n * @param {String} cardPoint\r\n */\r\nfunction valueOfFreeceell(cardPoint) {\r\n  switch (cardPoint) {\r\n    case 'A':\r\n      return 1\r\n    case 'J':\r\n      return 11\r\n    case 'Q':\r\n      return 12\r\n    case 'K':\r\n      return 13\r\n    default:\r\n      return parseInt(cardPoint)\r\n  }\r\n}\r\n\r\n/**\r\n * 判斷卡片的點數相差是否為1。\r\n * @param {String} pointA\r\n * @param {String} pointB\r\n */\r\nexport function substractEqualToOne(pointA, pointB) {\r\n  return valueOfFreeceell(pointA) - valueOfFreeceell(pointB) === 1\r\n}\r\n\r\n/**\r\n * 判斷在tableau中的卡片是否可以放入新的一張。只要拖曳的卡片與在tableau的卡片花色成相反顏色，\r\n * 且拖曳卡片的點數小於tableau中的卡片 1 點，即可放入。\r\n * @param {*} isDraggedCard\r\n * @param {*} card\r\n */\r\nexport function isDroppable(isDraggedCard, card) {\r\n  if (isDraggedCard.columnIndex === card.columnIndex) return false\r\n\r\n  const [isDraggedCardPoint, isDraggedCardSuit] = isDraggedCard.card.split('_')\r\n  const [cardPoint, cardSuit] = card.card.split('_')\r\n\r\n  if (isDraggedCardSuit !== cardSuit && isDraggedCardPoint !== cardPoint) {\r\n    if (\r\n      isDifferentColorSuit(isDraggedCardSuit, cardSuit) &&\r\n      substractEqualToOne(cardPoint, isDraggedCardPoint)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 判斷 homecell 是不是可以放入卡片。當 Homecell 儲存的卡片跟拖曳的卡片同一花色，且儲存\r\n * 的卡片點數小於拖曳卡片點數 1 點，即可放入卡片。\r\n * @param {String} isDraggedCard\r\n * @param {String} card\r\n */\r\nexport function canDropHomeCell(isDraggedCard, card) {\r\n  const [isDraggedCardPoint, isDraggedCardSuit] = isDraggedCard.split('_')\r\n\r\n  if (typeof card === 'undefined') {\r\n    if (isDraggedCardPoint === 'A') {\r\n      return true\r\n    }\r\n  } else {\r\n    const [cardPoint, cardSuit] = card.split('_')\r\n    if (\r\n      isSameSuit(isDraggedCardSuit, cardSuit) &&\r\n      substractEqualToOne(isDraggedCardPoint, cardPoint)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 把總秒數轉換成 min:sec\r\n * @param {Number} totalSeconds\r\n */\r\nexport function getTime(totalSeconds) {\r\n  let minutes = Math.floor(totalSeconds / 60)\r\n  let seconds = totalSeconds - minutes * 60\r\n\r\n  if (minutes < 10) minutes = '0' + minutes\r\n  if (seconds < 10) seconds = '0' + seconds\r\n  return `${minutes}:${seconds}`\r\n}\r\n\r\n/**\r\n * 計算空白的排堆共有幾堆\r\n * @param {Array} cards\r\n */\r\nfunction numOfEmptyCards(cards) {\r\n  let count = 0\r\n  cards.forEach(card => {\r\n    if (card === null || card.length === 0) {\r\n      count += 1\r\n    }\r\n  })\r\n  return count\r\n}\r\n\r\n/**\r\n * 判斷在`tableauCards`中的第`columnIndex`行，第`index`張卡片是否可以拖曳。如果\r\n * `freeCellCards`的空排堆+tableauCards`的空排堆+1小於被拖曳的卡片數量，則不可以拖曳。\r\n * 且拖曳的卡片必須符合規則。\r\n * @param {Array} tableauCards\r\n * @param {Array} freeCellCards\r\n * @param {Number} columnIndex\r\n * @param {Number} index\r\n */\r\nexport function isDraggable(tableauCards, freeCellCards, columnIndex, index) {\r\n  const tableauColumn = tableauCards[columnIndex]\r\n  const numOfDraggableCard =\r\n    numOfEmptyCards(tableauCards) + numOfEmptyCards(freeCellCards) + 1\r\n  const numOfDraggingCards = tableauColumn.length - index\r\n\r\n  if (numOfDraggingCards > numOfDraggableCard) return false\r\n\r\n  const newTableauColumn = [...tableauColumn]\r\n  const cards = newTableauColumn\r\n    .splice(index, tableauColumn.length - index)\r\n    .reverse()\r\n    .map(card => {\r\n      const [point, suit] = card.split('_')\r\n      return { point, suit }\r\n    })\r\n  for (let i = 0; i < cards.length - 1; i++) {\r\n    if (!isDifferentColorSuit(cards[i].suit, cards[i + 1].suit)) {\r\n      return false\r\n    }\r\n    if (!substractEqualToOne(cards[i + 1].point, cards[i].point)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","import {\r\n  isDifferentColorSuit,\r\n  substractEqualToOne,\r\n  isSameSuit,\r\n  isDraggable,\r\n  shuffle\r\n} from '../../utils/utils'\r\n\r\nconst getErea = card => {\r\n  if (typeof card.columnIndex !== 'undefined') {\r\n    return 'tableau'\r\n  } else if (typeof card.freeCellIndex !== 'undefined') {\r\n    return 'freecell'\r\n  } else if (typeof card.homeCellIndex !== 'undefined') {\r\n    return 'homecell'\r\n  }\r\n}\r\n\r\nconst getDraggedElements = (tableauCards, freeCellCards, isDraggedCard) => {\r\n  let draggedElement\r\n  const dragSource = getErea(isDraggedCard)\r\n  if (dragSource === 'tableau') {\r\n    const tableauColumn = tableauCards[isDraggedCard.columnIndex]\r\n    draggedElement = tableauColumn.splice(\r\n      isDraggedCard.index,\r\n      tableauColumn.length - isDraggedCard.index\r\n    )\r\n  } else if (dragSource === 'freecell') {\r\n    draggedElement = [freeCellCards[isDraggedCard.freeCellIndex]]\r\n    freeCellCards[isDraggedCard.freeCellIndex] = null\r\n  }\r\n  return draggedElement\r\n}\r\n\r\nexport const dropCard = (state, payload) => {\r\n  const { tableauCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const targetColumnIndex = payload.columnIndex\r\n  let draggedElements = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  newTableauCards[targetColumnIndex].push(...draggedElements)\r\n\r\n  return { freeCellCards: newFreeCellCards, tableauCards: newTableauCards }\r\n}\r\n\r\nexport const dropCardToFreeCell = (state, payload) => {\r\n  const { tableauCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const targetColumnIndex = payload.freeCellIndex\r\n  const draggedElement = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  newFreeCellCards[targetColumnIndex] = draggedElement[0]\r\n\r\n  return { freeCellCards: newFreeCellCards, tableauCards: newTableauCards }\r\n}\r\n\r\nexport const dropCardToHomeCell = (state, payload) => {\r\n  const { tableauCards, homeCellCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newHomeCellCards = [...homeCellCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  let draggedElement = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  const targetColumnIndex = payload.homeCellIndex\r\n  newHomeCellCards[targetColumnIndex].push(draggedElement[0])\r\n\r\n  return {\r\n    homeCellCards: newHomeCellCards,\r\n    tableauCards: newTableauCards,\r\n    freeCellCards: newFreeCellCards\r\n  }\r\n}\r\n\r\nexport const saveHistory = (state, payload) => {\r\n  const { isDraggedCard } = state\r\n  const history = {\r\n    source: isDraggedCard,\r\n    target: payload\r\n  }\r\n  return history\r\n}\r\n\r\nconst getLastTargetElementList = (\r\n  targetErea,\r\n  target,\r\n  newTableauCards,\r\n  newHomeCellCards,\r\n  newFreeCellCards\r\n) => {\r\n  let lastTargetElement\r\n\r\n  if (targetErea === 'freecell') {\r\n    const lastTargetIndex = target.freeCellIndex\r\n    lastTargetElement = [newFreeCellCards[lastTargetIndex]]\r\n    newFreeCellCards[lastTargetIndex] = null\r\n  } else if (targetErea === 'homecell') {\r\n    const lastTargetIndex = target.homeCellIndex\r\n    lastTargetElement = newHomeCellCards[lastTargetIndex].splice(-1, 1)\r\n  } else if (targetErea === 'tableau') {\r\n    const lastTargetIndex = target.columnIndex\r\n    lastTargetElement = newTableauCards[lastTargetIndex].splice(\r\n      target.index,\r\n      target.numOfCards\r\n    )\r\n  }\r\n  return lastTargetElement\r\n}\r\n\r\nexport const backOneStep = state => {\r\n  const { tableauCards, homeCellCards, freeCellCards } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newHomeCellCards = [...homeCellCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const lastMove = state.moveHistories.pop()\r\n  const lastMoveSourceErea = getErea(lastMove.source)\r\n  const lastMoveTargetErea = getErea(lastMove.target)\r\n\r\n  const lastTargetElementList = getLastTargetElementList(\r\n    lastMoveTargetErea,\r\n    lastMove.target,\r\n    newTableauCards,\r\n    newHomeCellCards,\r\n    newFreeCellCards\r\n  )\r\n\r\n  if (lastMoveSourceErea === 'freecell') {\r\n    const lastSourceIndex = lastMove.source.freeCellIndex\r\n    newFreeCellCards[lastSourceIndex] = lastTargetElementList[0]\r\n  } else if (lastMoveSourceErea === 'tableau') {\r\n    const lastSourceIndex = lastMove.source.columnIndex\r\n    newTableauCards[lastSourceIndex].push(...lastTargetElementList)\r\n  }\r\n\r\n  return {\r\n    freeCellCards: newFreeCellCards,\r\n    homeCellCards: newHomeCellCards,\r\n    tableauCards: newTableauCards\r\n  }\r\n}\r\n\r\n/**\r\n * 把在tableau中可以拖曳的卡片全部儲存進陣列\r\n * @param {Array} tableauCards\r\n */\r\nfunction getAllTableauDraggableCards(tableauCards, freeCellCards) {\r\n  let tableauDraggableCards = []\r\n  for (let columnIndex = 0; columnIndex < tableauCards.length; columnIndex++) {\r\n    if (tableauCards[columnIndex].length === 0) {\r\n      tableauDraggableCards.push({ columnIndex, index: 0 })\r\n      continue\r\n    }\r\n    for (\r\n      let index = tableauCards[columnIndex].length - 1;\r\n      index >= 0;\r\n      index--\r\n    ) {\r\n      if (isDraggable(tableauCards, freeCellCards, columnIndex, index)) {\r\n        const [point, suit] = tableauCards[columnIndex][index].split('_')\r\n        tableauDraggableCards.push({\r\n          columnIndex,\r\n          index,\r\n          card: { point, suit }\r\n        })\r\n      } else {\r\n        continue\r\n      }\r\n    }\r\n  }\r\n  return tableauDraggableCards\r\n}\r\n\r\n/**\r\n * 擷取所有的free cell\r\n * @param {Array} freeCellCards\r\n */\r\nfunction getAllFreeCellCards(freeCellCards) {\r\n  return freeCellCards.map((card, freeCellIndex) => ({\r\n    freeCellIndex,\r\n    card\r\n  }))\r\n}\r\n\r\n/**\r\n * 擷取所有的 home cell\r\n * @param {Array} homeCellCards\r\n */\r\nfunction getAllHomeCellCards(homeCellCards) {\r\n  return homeCellCards.map((card, homeCellIndex) => {\r\n    if (card.length === 0) return { homeCellIndex, card }\r\n    const [point, suit] = card[card.length - 1].split('_')\r\n    return {\r\n      homeCellIndex,\r\n      card: { point, suit }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 判斷 card 是不是在 tableau 中其中一行的最後一張卡片\r\n *\r\n * @param {Arrat} tableauCards\r\n * @param {Object} card\r\n */\r\nfunction isLastCardInTableauColumn(tableauCards, card) {\r\n  return tableauCards[card.columnIndex].length - 1 === card.index\r\n}\r\n\r\n/**\r\n * 判斷 tableauCard 是否是一張空的卡\r\n *\r\n * @param {Object}} tableauCard\r\n */\r\nfunction isEmptyCard(card) {\r\n  return typeof card.card === 'undefined' || card.card === null\r\n}\r\n\r\nexport const getHint = state => {\r\n  let tableauCards = [...state.tableauCards]\r\n  let homeCellCards = [...state.homeCellCards]\r\n  let freeCellCards = [...state.freeCellCards]\r\n\r\n  let tableauDraggableCards = shuffle(\r\n    getAllTableauDraggableCards(tableauCards, freeCellCards)\r\n  )\r\n\r\n  freeCellCards = getAllFreeCellCards(freeCellCards)\r\n\r\n  homeCellCards = getAllHomeCellCards(homeCellCards)\r\n\r\n  let hint = []\r\n  // 如果在home cell 中有可以放的位置優先處理\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCard = tableauDraggableCards[i]\r\n    if (isEmptyCard(tableauCard)) continue\r\n    for (let j = 0; j < homeCellCards.length; j++) {\r\n      const homeCellCard = homeCellCards[j]\r\n      if (\r\n        (homeCellCard.card.length === 0 && tableauCard.card.point === 'A') ||\r\n        (isSameSuit(tableauCard.card.suit, homeCellCard.card.suit) &&\r\n          substractEqualToOne(\r\n            tableauCard.card.point,\r\n            homeCellCard.card.point\r\n          ) &&\r\n          isLastCardInTableauColumn(tableauCards, tableauCard))\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            homeCellIndex: homeCellCard.homeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 如果在tableau中有可拖曳與放置的位置，則第二順位處理\r\n  for (let i = 0; i < tableauDraggableCards.length - 1; i++) {\r\n    const tableauCardA = tableauDraggableCards[i]\r\n\r\n    if (isEmptyCard(tableauCardA)) continue\r\n\r\n    for (let j = i + 1; j < tableauDraggableCards.length; j++) {\r\n      const tableauCardB = tableauDraggableCards[j]\r\n\r\n      if (isEmptyCard(tableauCardB)) continue\r\n      if (\r\n        isDifferentColorSuit(tableauCardA.card.suit, tableauCardB.card.suit) &&\r\n        ((substractEqualToOne(\r\n          tableauCardA.card.point,\r\n          tableauCardB.card.point\r\n        ) &&\r\n          isLastCardInTableauColumn(tableauCards, tableauCardA)) ||\r\n          (substractEqualToOne(\r\n            tableauCardB.card.point,\r\n            tableauCardA.card.point\r\n          ) &&\r\n            isLastCardInTableauColumn(tableauCards, tableauCardB))) &&\r\n        tableauCardA.columnIndex !== tableauCardB.columnIndex\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCardA.columnIndex,\r\n            index: tableauCardA.index\r\n          },\r\n          {\r\n            columnIndex: tableauCardB.columnIndex,\r\n            index: tableauCardB.index\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 如果在 free cell中有可以儲存 tableau 中的卡片，則第三順位處理。有三種可以拖曳並放置卡片的情況，\r\n  // 第一種為 tableau 中有空白的行，且 free cell中有卡片；第二種為 free cell 中有空白的位置，且\r\n  // tableau 中有卡片；第三種為 free cell 中的卡片可以放至 tableau 的卡片上。\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCard = tableauDraggableCards[i]\r\n    for (let j = 0; j < freeCellCards.length; j++) {\r\n      const freeCellCard = freeCellCards[j]\r\n      console.log(tableauCard, freeCellCard)\r\n      if (\r\n        (isEmptyCard(tableauCard) && !isEmptyCard(freeCellCard)) ||\r\n        (!isEmptyCard(tableauCard) &&\r\n          isEmptyCard(freeCellCard) &&\r\n          isLastCardInTableauColumn(tableauCards, tableauCard))\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            freeCellIndex: freeCellCard.freeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      } else if (\r\n        isLastCardInTableauColumn(tableauCards, tableauCard) &&\r\n        isDifferentColorSuit(tableauCard.card.suit, freeCellCard.card.suit) &&\r\n        substractEqualToOne(tableauCard.card.point, freeCellCard.card.point)\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            freeCellIndex: freeCellCard.freeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 最後一種為 tableau 中有一個可拖曳的卡片，而另一個則為空白的行。\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCardA = tableauDraggableCards[i]\r\n    for (let j = i + 1; j < tableauDraggableCards.length; j++) {\r\n      const tableauCardB = tableauDraggableCards[j]\r\n      if (\r\n        (isEmptyCard(tableauCardA) && !isEmptyCard(tableauCardB)) ||\r\n        (!isEmptyCard(tableauCardA) && isEmptyCard(tableauCardB))\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCardA.columnIndex,\r\n            index: tableauCardA.index\r\n          },\r\n          {\r\n            columnIndex: tableauCardB.columnIndex,\r\n            index: tableauCardB.index\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  return hint\r\n}\r\n","import FreecellTypes from './freecell.types'\r\nimport {\r\n  dropCard,\r\n  dropCardToFreeCell,\r\n  dropCardToHomeCell,\r\n  saveHistory,\r\n  backOneStep,\r\n  getHint\r\n} from './freecell.utils'\r\nimport { generateRandomCards } from '../../utils/utils'\r\n\r\nconst INIT_RAMDOM_CARDS = generateRandomCards()\r\n\r\nconst INITIAL_STATE = {\r\n  initTableauCards: INIT_RAMDOM_CARDS.map(inner => inner.slice()),\r\n  tableauCards: INIT_RAMDOM_CARDS.map(inner => inner.slice()),\r\n  moveHistories: [],\r\n  freeCellCards: [null, null, null, null],\r\n  homeCellCards: [[], [], [], []],\r\n  isDraggedCard: null,\r\n  game: {\r\n    points: 0,\r\n    time: 0,\r\n    hint: []\r\n  },\r\n  showMenu: false\r\n}\r\n\r\nconst freecellReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FreecellTypes.DRAG_CARD:\r\n      return {\r\n        ...state,\r\n        isDraggedCard: action.payload,\r\n        game: {\r\n          ...state.game,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.REMOVE_DRAGGED_CARD:\r\n      return {\r\n        ...state,\r\n        isDraggedCard: null\r\n      }\r\n    case FreecellTypes.DROP_CARD:\r\n      return {\r\n        ...state,\r\n        ...dropCard(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.DROP_CARD_TO_FREE_CELL:\r\n      return {\r\n        ...state,\r\n        ...dropCardToFreeCell(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.DROP_CARD_TO_HOME_CELL:\r\n      return {\r\n        ...state,\r\n        ...dropCardToHomeCell(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.START_A_NEW_GAME:\r\n      const initTableauCards = generateRandomCards()\r\n      return {\r\n        ...state,\r\n        initTableauCards: initTableauCards.map(inner => inner.slice()),\r\n        tableauCards: initTableauCards.map(inner => inner.slice()),\r\n        freeCellCards: [null, null, null, null],\r\n        homeCellCards: [[], [], [], []],\r\n        moveHistories: [],\r\n        game: {\r\n          points: 0,\r\n          time: 0,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.END_GAME:\r\n      return {\r\n        ...state,\r\n        tableauCards: [],\r\n        freeCellCards: [null, null, null, null]\r\n      }\r\n    case FreecellTypes.TOGGLE_MENU:\r\n      if (action.payload === 'close') {\r\n        return {\r\n          ...state,\r\n          showMenu: false\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        showMenu: !state.showMenu\r\n      }\r\n    case FreecellTypes.BACK_ONE_STEP:\r\n      return {\r\n        ...state,\r\n        ...backOneStep(state, action.payload)\r\n      }\r\n    case FreecellTypes.RESTART_THIS_GAME:\r\n      return {\r\n        ...state,\r\n        tableauCards: state.initTableauCards.map(inner => inner.slice()),\r\n        freeCellCards: [null, null, null, null],\r\n        homeCellCards: [[], [], [], []],\r\n        game: {\r\n          points: 0,\r\n          time: 0,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.UPDATE_TIMER:\r\n      return {\r\n        ...state,\r\n        game: { ...state.game, time: state.game.time + 1 }\r\n      }\r\n    case FreecellTypes.INCREASE_GAME_POINTS:\r\n      return {\r\n        ...state,\r\n        game: { ...state.game, points: state.game.points + 5 }\r\n      }\r\n    case FreecellTypes.GET_HINT:\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          hint: getHint(state)\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default freecellReducer\r\n","import { combineReducers } from 'redux'\r\nimport freecellReducer from './freecell/freecell.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  freecell: freecellReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst logger = createLogger()\r\n\r\n// const middlewares = [logger]\r\nconst middlewares = []\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n","import FreecellTypes from './freecell.types'\r\n\r\nexport const dragCard = payload => ({\r\n  type: FreecellTypes.DRAG_CARD,\r\n  payload: payload\r\n})\r\n\r\nexport const removeDraggedCard = () => ({\r\n  type: FreecellTypes.REMOVE_DRAGGED_CARD\r\n})\r\n\r\nexport const dropCard = payload => ({\r\n  type: FreecellTypes.DROP_CARD,\r\n  payload: payload\r\n})\r\n\r\nexport const dropCardToFreeCell = payload => ({\r\n  type: FreecellTypes.DROP_CARD_TO_FREE_CELL,\r\n  payload: payload\r\n})\r\n\r\nexport const dropCardToHomeCell = payload => ({\r\n  type: FreecellTypes.DROP_CARD_TO_HOME_CELL,\r\n  payload: payload\r\n})\r\n\r\nexport const startANewGame = () => ({\r\n  type: FreecellTypes.START_A_NEW_GAME\r\n})\r\n\r\nexport const endGame = () => ({\r\n  type: FreecellTypes.END_GAME\r\n})\r\n\r\nexport const toggleMenu = payload => ({\r\n  type: FreecellTypes.TOGGLE_MENU,\r\n  payload: payload\r\n})\r\n\r\nexport const backOneStep = () => ({\r\n  type: FreecellTypes.BACK_ONE_STEP\r\n})\r\n\r\nexport const restartThisGame = () => ({\r\n  type: FreecellTypes.RESTART_THIS_GAME\r\n})\r\n\r\nexport const updateTimer = () => ({\r\n  type: FreecellTypes.UPDATE_TIMER\r\n})\r\n\r\nexport const increaseGamePoints = () => ({\r\n  type: FreecellTypes.INCREASE_GAME_POINTS\r\n})\r\n\r\nexport const getHint = () => ({\r\n  type: FreecellTypes.GET_HINT\r\n})\r\n","import { createSelector } from 'reselect'\r\n\r\nconst tableauCards = state => state.freecell.tableauCards\r\nconst freeCellCards = state => state.freecell.freeCellCards\r\nconst moveHistories = state => state.freecell.moveHistories\r\n\r\nexport const endGameSelector = createSelector(\r\n  tableauCards,\r\n  freeCellCards,\r\n  (tableauCards, freeCellCards) => {\r\n    const numOfTableauCard = tableauCards.reduce(\r\n      (count, row) => count + row.length,\r\n      0\r\n    )\r\n\r\n    const numOfFreeCellCards = freeCellCards.reduce(\r\n      (count, row) => count + (row !== null ? 1 : 0),\r\n      0\r\n    )\r\n    return numOfTableauCard + numOfFreeCellCards === 0\r\n  }\r\n)\r\n\r\nexport const canBackOnStepSelector = createSelector(\r\n  moveHistories,\r\n  moveHistories => moveHistories.length > 0\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Diamond from '../../assets/img/Diamond.svg'\r\nimport './Header.styles.scss'\r\nimport { updateTimer } from '../../redux/freecell/freecell.action'\r\nimport { endGameSelector } from '../../redux/freecell/freecell.selectors'\r\nimport { getTime } from '../../utils/utils'\r\n\r\nconst Header = () => {\r\n  const isEndGame = useSelector(endGameSelector)\r\n  const gamePoints = useSelector(state => state.freecell.game.points)\r\n  const gameTime = useSelector(state => state.freecell.game.time)\r\n  const dispatch = useDispatch()\r\n  const [timer, setTimer] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!isEndGame) {\r\n      setTimer(\r\n        setInterval(() => {\r\n          dispatch(updateTimer())\r\n        }, 1000)\r\n      )\r\n    } else {\r\n      clearInterval(timer)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isEndGame])\r\n\r\n  return (\r\n    <div className='header'>\r\n      {!isEndGame ? (\r\n        <>\r\n          <span className='header__points'>{gamePoints}</span>\r\n          <img src={Diamond} alt='diamond' className='header__diamond' />\r\n          <span className='header__time'>{getTime(gameTime)}</span>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const ItemTypes = {\r\n  FREECEEL: 'FREECEEL'\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { getEmptyImage } from 'react-dnd-html5-backend'\r\nimport './FreeCellCard.styles.scss'\r\nimport { getImageObj } from '../../utils/utils'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport {\r\n  dropCardToFreeCell,\r\n  dragCard,\r\n  removeDraggedCard\r\n} from '../../redux/freecell/freecell.action'\r\n\r\nconst Card = ({ drag, card, isDragging }) => {\r\n  return (\r\n    <div\r\n      ref={drag}\r\n      className='free-cell-card__card'\r\n      style={{\r\n        backgroundImage: `url(${getImageObj(card)})`,\r\n        opacity: isDragging ? 0 : 1\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst FreeCellCard = props => {\r\n  const { card, index } = props\r\n  const dispatch = useDispatch()\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n\r\n  const showHint = hint.find(h => h.freeCellIndex === index)\r\n\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.FREECEEL },\r\n    begin: () =>\r\n      dispatch(dragCard({ freeCellIndex: index, card, numOfCards: 1 })),\r\n    end: (item, monitor) => dispatch(removeDraggedCard()),\r\n    canDrag: () => card !== null,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => card === null,\r\n    drop: () => dispatch(dropCardToFreeCell({ freeCellIndex: index }))\r\n  })\r\n\r\n  let cardImg\r\n  if (card) {\r\n    cardImg = <Card drag={drag} card={card} isDragging={isDragging} />\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`free-cell-card ` + (showHint ? 'free-cell-card--hint' : '')}\r\n      key={`card-${index}`}\r\n    >\r\n      {cardImg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCellCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './FreeCells.styles.scss'\r\nimport FreeCellCard from '../FreeCellCard/FreeCellCard.component'\r\n\r\nconst FreeCells = () => {\r\n  const freeCellCards = useSelector(state => state.freecell.freeCellCards)\r\n\r\n  return (\r\n    <div className='free-cells'>\r\n      {freeCellCards.map((card, index) => (\r\n        <FreeCellCard card={card} index={index} key={`free cell ${index}`}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCells\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDrop } from 'react-dnd'\r\nimport './HomeCellCard.styles.scss'\r\nimport {\r\n  dropCardToHomeCell,\r\n  increaseGamePoints\r\n} from '../../redux/freecell/freecell.action'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport { getImageObj, canDropHomeCell } from '../../utils/utils'\r\n\r\nconst HomeCellCard = props => {\r\n  const { card, index } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(h => h.homeCellIndex === index)\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => canDropHomeCell(isDraggedCard.card, card[card.length - 1]),\r\n    drop: () => {\r\n      dispatch(dropCardToHomeCell({ homeCellIndex: index }))\r\n      dispatch(increaseGamePoints())\r\n    }\r\n  })\r\n\r\n  let cardImg =\r\n    card.length > 0 ? (\r\n      <div\r\n        key={card}\r\n        className='home-cell-card__card'\r\n        style={{\r\n          backgroundImage: `url(${getImageObj(card[card.length - 1])})`\r\n        }}\r\n      />\r\n    ) : (\r\n      'A'\r\n    )\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`home-cell-card ` + (showHint ? 'home-cell-card--hint' : '')}\r\n      key={`card-${index}`}\r\n    >\r\n      {cardImg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeCellCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './HomeCells.styles.scss'\r\nimport HomeCellCard from '../HomeCellCard/HomeCellCard.component'\r\n\r\nconst HomeCells = () => {\r\n  const homeCellCards = useSelector(state => state.freecell.homeCellCards)\r\n\r\n  return (\r\n    <div className='home-cells'>\r\n      {homeCellCards.map((card, index) => (\r\n        <HomeCellCard card={card} index={index} key={`home cell ${index}`} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeCells\r\n","import React from 'react'\r\nimport './Card.styles.scss'\r\nimport { getImageObj } from '../../utils/utils'\r\n\r\nfunction getStyles(card, isOver, canDrop, isLastElement) {\r\n  return {\r\n    backgroundImage: `url(${getImageObj(card)})`,\r\n    border: isOver && canDrop && isLastElement ? '3px solid #ffac4e' : '',\r\n    borderRadius: isOver && canDrop && isLastElement ? '16px' : ''\r\n  }\r\n}\r\n\r\nconst Card = props => {\r\n  const { card, isLastElement, isOver, canDrop } = props\r\n  return (\r\n    <div\r\n      className='card'\r\n      style={getStyles(card, isOver, canDrop, isLastElement)}\r\n      key={card}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { getEmptyImage } from 'react-dnd-html5-backend'\r\nimport './NestedDraggable.styles.scss'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport Card from '../Card/Card.component'\r\nimport {\r\n  dragCard,\r\n  dropCard,\r\n  removeDraggedCard\r\n} from '../../redux/freecell/freecell.action'\r\nimport { isDroppable, isDraggable } from '../../utils/utils'\r\n\r\nfunction getTop(cardLength, index) {\r\n  if (cardLength > 15) {\r\n    if (cardLength - index > 7) {\r\n      return 20\r\n    }\r\n  } else {\r\n    if (cardLength - index > 9) {\r\n      return 20\r\n    }\r\n  }\r\n\r\n  return 36\r\n}\r\n\r\nfunction getStyle(cardLength, index, isDragging) {\r\n  return {\r\n    top: index === 0 ? '0px' : getTop(cardLength, index) + 'px',\r\n    width: '132px',\r\n    height: isDragging\r\n      ? 0\r\n      : getTop(cardLength, index) * (cardLength - index - 1) + 204 + 'px',\r\n    opacity: isDragging ? 0 : 1\r\n  }\r\n}\r\n\r\nconst NestedDraggable = props => {\r\n  const {\r\n    nested,\r\n    card: { card, index },\r\n    columnIndex,\r\n    cardLength,\r\n    isLastElement\r\n  } = props\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n  const tableauCards = useSelector(state => state.freecell.tableauCards)\r\n  const freeCellCards = useSelector(state => state.freecell.freeCellCards)\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(\r\n    h => h.columnIndex === columnIndex && h.index === index\r\n  )\r\n\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.FREECEEL },\r\n    begin: () =>\r\n      dispatch(\r\n        dragCard({ card, columnIndex, index, numOfCards: cardLength - index })\r\n      ),\r\n    end: () => dispatch(removeDraggedCard()),\r\n    canDrag: monitor =>\r\n      isDraggable(tableauCards, freeCellCards, columnIndex, index),\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging()\r\n    })\r\n  })\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => isDroppable(isDraggedCard, { card, columnIndex, index }),\r\n    drop: () => {\r\n      dispatch(\r\n        dropCard({\r\n          columnIndex,\r\n          index: index + 1,\r\n          numOfCards: isDraggedCard.numOfCards\r\n        })\r\n      )\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n      canDrop: !!monitor.canDrop()\r\n    })\r\n  })\r\n\r\n  const propsRef = { ref: drag }\r\n  if (isDraggedCard && isDraggedCard.card !== card) {\r\n    propsRef.ref = drop\r\n  }\r\n\r\n  return (\r\n    <div\r\n      {...propsRef}\r\n      className={\r\n        `nested-draggable ` + (showHint ? 'nested-draggable--hint' : '')\r\n      }\r\n      style={getStyle(cardLength, index, isDragging)}\r\n    >\r\n      <Card\r\n        card={card}\r\n        isLastElement={isLastElement}\r\n        cardLength={cardLength}\r\n        isOver={isOver}\r\n        canDrop={canDrop}\r\n        isDragging={isDragging}\r\n      />\r\n      {nested}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NestedDraggable\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useDrop } from 'react-dnd'\r\nimport './BlankDraggable.styles.scss'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport { dropCard } from '../../redux/freecell/freecell.action'\r\n\r\nfunction getStyles(isOver) {\r\n  return {\r\n    border: isOver ? '3px solid #ffac4e' : '',\r\n    borderRadius: isOver ? '16px' : ''\r\n  }\r\n}\r\n\r\nconst BlankDraggable = ({ columnIndex }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(h => h.columnIndex === columnIndex)\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    drop: () => {\r\n      dispatch(\r\n        dropCard({\r\n          columnIndex,\r\n          index: 0,\r\n          numOfCards: isDraggedCard.numOfCards\r\n        })\r\n      )\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver()\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`blank-draggable ` + (showHint ? 'blank-draggable--hint' : '')}\r\n      style={getStyles(isOver)}\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default BlankDraggable\r\n","import React from 'react'\r\nimport './TableauColumn.styles.scss'\r\nimport NestedDraggable from '../NestedDraggable/NestedDraggable.component'\r\nimport BlankDraggable from '../BlankDraggable/BlankDraggable.component'\r\n\r\nconst TableauColumn = props => {\r\n  const { cards, columnIndex } = props\r\n\r\n  return (\r\n    <div className='tableau-column'>\r\n      {cards.length > 0 ? (\r\n        cards\r\n          .map((card, index) => ({ card, index }))\r\n          .reverse()\r\n          .reduce(\r\n            (nested, card) => (\r\n              <NestedDraggable\r\n                nested={nested}\r\n                cardLength={cards.length}\r\n                card={card}\r\n                columnIndex={columnIndex}\r\n                isLastElement={card.index === cards.length - 1}\r\n              />\r\n            ),\r\n            null\r\n          )\r\n      ) : (\r\n        <BlankDraggable columnIndex={columnIndex} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableauColumn\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Tableau.styles.scss'\r\nimport TableauColumn from '../TableauColumn/TableauColumn.component'\r\n\r\nconst Tableau = () => {\r\n  const tableauCards = useSelector(state => state.freecell.tableauCards)\r\n\r\n  return (\r\n    <div className='tableau'>\r\n      {tableauCards.map((cards, index) => (\r\n        <TableauColumn\r\n          key={`tableau ${index}`}\r\n          cards={cards}\r\n          columnIndex={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tableau\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './RestartGameButton.styles.scss'\r\nimport Back from '../../assets/img/Back.svg'\r\nimport { restartThisGame, toggleMenu } from '../../redux/freecell/freecell.action'\r\n\r\nconst RestartGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRestartThisGame = () => {\r\n    dispatch(restartThisGame())\r\n    dispatch(toggleMenu('close'))\r\n  }\r\n\r\n  return (\r\n    <div className='restart-game-btn' onClick={handleRestartThisGame}>\r\n      <span>Restart this game</span>\r\n      <div\r\n        className='restart-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Back})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestartGameButton\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './NewGameButton.styles.scss'\r\nimport Plus from '../../assets/img/Plus.svg'\r\nimport { startANewGame, toggleMenu } from '../../redux/freecell/freecell.action'\r\n\r\nconst NewGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleStartANewGame = () => {\r\n    dispatch(startANewGame())\r\n    dispatch(toggleMenu('close'))\r\n  }\r\n\r\n  return (\r\n    <div className='new-game-btn' onClick={handleStartANewGame}>\r\n      <span>Start a new game</span>\r\n      <div\r\n        className='new-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Plus})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewGameButton\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Time from '../../assets/img/Time icon.svg'\r\nimport Diamond from '../../assets/img/Diamond.svg'\r\nimport './EndGameCard.styles.scss'\r\nimport RestartGameButton from '../RestartGameButton/RestartGameButton.component'\r\nimport NewGameButton from '../NewGameButton/NewGameButton.component'\r\nimport { getTime } from '../../utils/utils'\r\n\r\nconst EndGameCard = () => {\r\n  const gameTime = useSelector(state => state.freecell.game.time)\r\n  const gamePoint = useSelector(state => state.freecell.game.points)\r\n\r\n  return (\r\n    <div className='end-game'>\r\n      <div className='end-game__content'>\r\n        <div className='end-game__info'>\r\n          <div className='end-game__game-points'>\r\n            <img src={Diamond} alt='diamond' />\r\n            <h1>{gamePoint}</h1>\r\n            <img src={Diamond} alt='diamond' />\r\n          </div>\r\n          <div className='end-game__game-time'>\r\n            <img src={Time} alt='time' />\r\n            <h4>{getTime(gameTime)}</h4>\r\n          </div>\r\n        </div>\r\n        <div className='end-game__operations'>\r\n          <RestartGameButton />\r\n          <NewGameButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EndGameCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './CardDragPreview.styles.scss'\r\nimport { getImageObj } from '../../utils/utils'\r\n\r\nfunction getPreviewStyle(numOfCards) {\r\n  return { height: 36 * (numOfCards - 1) + 204 + 'px' }\r\n}\r\nfunction getStyles(card, index) {\r\n  return {\r\n    backgroundImage: `url(${getImageObj(card)})`,\r\n    top: 36 * index + 'px'\r\n  }\r\n}\r\nconst CardPreview = ({ card, index }) => {\r\n  return (\r\n    <div\r\n      className='card-drag-preview__card-image'\r\n      key={card}\r\n      style={getStyles(card, index)}\r\n    />\r\n  )\r\n}\r\nconst CardDragPreview = props => {\r\n  const tableauCards = useSelector(state => state.freecell.tableauCards)\r\n\r\n  const {\r\n    card: { payload }\r\n  } = props\r\n\r\n  const renderCard = payload => {\r\n    if (typeof payload.columnIndex !== 'undefined') {\r\n      return (\r\n        <>\r\n          {[...tableauCards[payload.columnIndex]]\r\n            .splice(payload.index, payload.numOfCards)\r\n            .map((card, index) => (\r\n              <CardPreview card={card} index={index} key={card} />\r\n            ))}\r\n        </>\r\n      )\r\n    } else if (typeof payload.freeCellIndex !== 'undefined') {\r\n      return <CardPreview card={payload.card} index={0} />\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className='card-drag-preview'\r\n      style={getPreviewStyle(payload.numOfCards)}\r\n    >\r\n      {renderCard(payload)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardDragPreview\r\n","import React from 'react'\r\nimport { useDragLayer } from 'react-dnd'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport CardDragPreivew from '../CardDragPreview/CardDragPreview.component'\r\n\r\nconst layerStyles = {\r\n  position: 'fixed',\r\n  pointerEvents: 'none',\r\n  zIndex: 100,\r\n  left: 0,\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%'\r\n}\r\nfunction getItemStyles(initialOffset, currentOffset) {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none'\r\n    }\r\n  }\r\n  let { x, y } = currentOffset\r\n\r\n  const transform = `translate(${x}px, ${y}px)`\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform\r\n  }\r\n}\r\nconst CustomDragLayer = props => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset\r\n  } = useDragLayer(monitor => ({\r\n    item: monitor.getItem(),\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging()\r\n  }))\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.FREECEEL:\r\n        return <CardDragPreivew card={item} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n  if (!isDragging) {\r\n    return null\r\n  }\r\n  return (\r\n    <div style={layerStyles}>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomDragLayer\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './GameBoard.styles.scss'\r\nimport FreeCells from '../FreeCells/FreeCells.component'\r\nimport HomeCells from '../HomeCells/HomeCells.component'\r\nimport Tableau from '../Tableau/Tableau.component'\r\nimport EndGameCard from '../EndGameCard/EndGameCard.component'\r\nimport CustomDragLayer from '../CustomDragLayer/CustomDragLayer.component'\r\nimport { endGameSelector } from '../../redux/freecell/freecell.selectors'\r\n\r\nconst GameBoard = () => {\r\n  const isEndGame = useSelector(endGameSelector)\r\n\r\n  return (\r\n    <div className='game-board'>\r\n      <CustomDragLayer />\r\n      <div className='game-board__top-nav'>\r\n        <FreeCells />\r\n        <HomeCells />\r\n      </div>\r\n      {isEndGame ? <EndGameCard /> : <Tableau />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameBoard\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './EndGameButton.styles.scss'\r\nimport Check from '../../assets/img/Check.svg'\r\nimport {\r\n  endGame,\r\n  toggleMenu\r\n} from '../../redux/freecell/freecell.action'\r\n\r\nconst EndGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleEndGame = () => {\r\n    dispatch(endGame())\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  return (\r\n    <div className='end-game-btn' onClick={handleEndGame}>\r\n      <span>End game</span>\r\n      <div\r\n        className='end-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Check})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EndGameButton\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Menu.styles.scss'\r\nimport RestartGameButton from '../RestartGameButton/RestartGameButton.component'\r\nimport NewGameButton from '../NewGameButton/NewGameButton.component'\r\nimport EndGameButton from '../EndGameButton/EndGameButton.component'\r\n\r\nconst Menu = () => {\r\n  const isShow = useSelector(state => state.freecell.showMenu)\r\n  return (\r\n    <div className={`menu ${isShow ? 'menu--active' : ''}`}>\r\n      <div className='menu__content'>\r\n        <RestartGameButton />\r\n        <NewGameButton />\r\n        <EndGameButton />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { DndProvider } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport Back from '../../assets/img/Back.svg'\r\nimport Hint from '../../assets/img/Hint.svg'\r\nimport './FreeCell.styles.scss'\r\nimport Header from '../../components/Header/Header.component'\r\nimport GameBoard from '../../components/GameBoard/GameBoard.component'\r\nimport Menu from '../../components/Menu/Menu.component'\r\nimport {\r\n  toggleMenu,\r\n  backOneStep,\r\n  getHint\r\n} from '../../redux/freecell/freecell.action'\r\nimport { endGameSelector } from '../../redux/freecell/freecell.selectors'\r\n\r\nconst FreeCell = () => {\r\n  const dispatch = useDispatch()\r\n  const showMenu = useSelector(state => state.freecell.showMenu)\r\n  const canBackOneStep = useSelector(\r\n    state => state.freecell.moveHistories.length > 0\r\n  )\r\n  const isEndGame = useSelector(endGameSelector)\r\n\r\n  const handleToggleMenu = () => {\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  const handleBackOneStep = () => {\r\n    if (canBackOneStep && !isEndGame) {\r\n      dispatch(backOneStep())\r\n    }\r\n  }\r\n\r\n  const handleGetHint = () => {\r\n    dispatch(getHint())\r\n  }\r\n\r\n  return (\r\n    <div className='free-cell'>\r\n      <header className='free-cell__header'>\r\n        <div className='free-cell__logo'>Freecell</div>\r\n        <Header />\r\n        <div\r\n          className={`free-cell__menu ${\r\n            showMenu ? 'free-cell__menu--active' : ''\r\n          }`}\r\n          onClick={handleToggleMenu}\r\n        >\r\n          <span></span>\r\n        </div>\r\n      </header>\r\n      <Menu isShow={showMenu} handleToggleMenu={handleToggleMenu} />\r\n      <div className='free-cell__game-board'>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <GameBoard />\r\n        </DndProvider>\r\n        <div className='free-cell__game-btn'>\r\n          <div className='free-cell__hint' onClick={handleGetHint}>\r\n            <button>\r\n              <img src={Hint} alt='hint button' />\r\n            </button>\r\n          </div>\r\n          <div className='free-cell__back' onClick={handleBackOneStep}>\r\n            <button>\r\n              <img src={Back} alt='back button' />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCell\r\n","import React from 'react'\nimport './App.css'\nimport FreeCell from './pages/FreeCell/FreeCell.component'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <FreeCell />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport { store } from './redux/store'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}