{"version":3,"sources":["assets/img/Diamond.svg","assets/img/Back.svg","assets/img/cards/A_Clubs.svg","assets/img/cards/2_Clubs.svg","assets/img/cards/3_Clubs.svg","assets/img/cards/4_Clubs.svg","assets/img/cards/5_Clubs.svg","assets/img/cards/6_Clubs.svg","assets/img/cards/7_Clubs.svg","assets/img/cards/8_Clubs.svg","assets/img/cards/9_Clubs.svg","assets/img/cards/10_Clubs.svg","assets/img/cards/J_Clubs.svg","assets/img/cards/Q_Clubs.svg","assets/img/cards/K_Clubs.svg","assets/img/cards/A_Diamonds.svg","assets/img/cards/2_Diamonds.svg","assets/img/cards/3_Diamonds.svg","assets/img/cards/4_Diamonds.svg","assets/img/cards/5_Diamonds.svg","assets/img/cards/6_Diamonds.svg","assets/img/cards/7_Diamonds.svg","assets/img/cards/8_Diamonds.svg","assets/img/cards/9_Diamonds.svg","assets/img/cards/10_Diamonds.svg","assets/img/cards/J_Diamonds.svg","assets/img/cards/Q_Diamonds.svg","assets/img/cards/K_Diamonds.svg","assets/img/cards/A_Hearts.svg","assets/img/cards/2_Hearts.svg","assets/img/cards/3_Hearts.svg","assets/img/cards/4_Hearts.svg","assets/img/cards/5_Hearts.svg","assets/img/cards/6_Hearts.svg","assets/img/cards/7_Hearts.svg","assets/img/cards/8_Hearts.svg","assets/img/cards/9_Hearts.svg","assets/img/cards/10_Hearts.svg","assets/img/cards/J_Hearts.svg","assets/img/cards/Q_Hearts.svg","assets/img/cards/K_Hearts.svg","assets/img/cards/A_Spades.svg","assets/img/cards/2_Spades.svg","assets/img/cards/3_Spades.svg","assets/img/cards/4_Spades.svg","assets/img/cards/5_Spades.svg","assets/img/cards/6_Spades.svg","assets/img/cards/7_Spades.svg","assets/img/cards/8_Spades.svg","assets/img/cards/9_Spades.svg","assets/img/cards/10_Spades.svg","assets/img/cards/J_Spades.svg","assets/img/cards/Q_Spades.svg","assets/img/cards/K_Spades.svg","assets/img/Hint.svg","assets/img/Time icon.svg","assets/img/Plus.svg","assets/img/Check.svg","redux/freecell/freecell.types.js","utils/utils.js","redux/freecell/freecell.utils.js","redux/freecell/freecell.reducer.js","redux/rootReducer.js","redux/store.js","redux/freecell/freecell.action.js","components/Header/Header.component.jsx","reactdnd/freecell.dndtypes.js","components/FreeCellCard/FreeCellCard.component.jsx","components/FreeCells/FreeCells.component.jsx","components/HomeCellCard/HomeCellCard.component.jsx","components/HomeCells/HomeCells.component.jsx","components/Card/Card.component.jsx","components/NestedDraggable/NestedDraggable.component.jsx","components/BlankDraggable/BlankDraggable.component.jsx","components/TableauColumn/TableauColumn.component.jsx","components/Tableau/Tableau.component.jsx","components/RestartGameButton/RestartGameButton.component.jsx","components/NewGameButton/NewGameButton.component.jsx","components/EndGameCard/EndGameCard.component.jsx","redux/freecell/freecell.selectors.js","components/GameBoard/GameBoard.component.jsx","components/EndGameButton/EndGameButton.component.jsx","components/Menu/Menu.component.jsx","pages/FreeCell/FreeCell.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FreeCellTypes","DRAG_CARD","REMOVE_DRAGGED_CARD","DROP_CARD","DROP_CARD_TO_FREE_CELL","DROP_CARD_TO_HOME_CELL","START_A_NEW_GAME","RESTART_THIS_GAME","END_GAME","TOGGLE_MENU","BACK_ONE_STEP","GET_HINT","UPDATE_TIMER","INCREASE_GAME_POINTS","shuffle","array","i","length","j","Math","floor","random","generateRandomCards","suits","cards","forEach","point","suit","push","freecellList","number","splice","getImageObj","card","Club_A","Diamond_A","Heart_A","Spade_A","Club_2","Diamond_2","Heart_2","Spade_2","Club_3","Diamond_3","Heart_3","Spade_3","Club_4","Diamond_4","Heart_4","Spade_4","Club_5","Diamond_5","Heart_5","Spade_5","Club_6","Diamond_6","Heart_6","Spade_6","Club_7","Diamond_7","Heart_7","Spade_7","Club_8","Diamond_8","Heart_8","Spade_8","Club_9","Diamond_9","Heart_9","Spade_9","Club_10","Diamond_10","Heart_10","Spade_10","Club_J","Diamond_J","Heart_J","Spade_J","Club_Q","Diamond_Q","Heart_Q","Spade_Q","Club_K","Diamond_K","Heart_K","Spade_K","isDifferentColorSuit","suitA","suitB","isSameSuit","valueOfFreeceell","cardPoint","parseInt","substractEqualToOne","pointA","pointB","getTime","totalSeconds","minutes","seconds","isDraggable","tableauColumn","index","reverse","map","split","getErea","columnIndex","freeCellIndex","homeCellIndex","getDraggedElements","tableauCards","freeCellCards","isDraggedCard","draggedElement","dragSource","dropCard","state","payload","newTableauCards","newFreeCellCards","targetColumnIndex","draggedElements","dropCardToFreeCell","dropCardToHomeCell","homeCellCards","newHomeCellCards","saveHistory","source","target","backOneStep","lastMove","moveHistories","pop","lastMoveSourceErea","lastTargetElementList","targetErea","lastTargetElement","lastTargetIndex","numOfCards","getLastTargetElementList","getHint","tableauDraggableCards","getAllTableauDraggableCards","getAllFreeCellCards","getAllHomeCellCards","hint","tableauCard","homeCellCard","tableauCardA","tableauCardB","freeCellCard","INIT_RAMDOM_CARDS","INITIAL_STATE","initTableauCards","inner","slice","game","points","time","showMenu","freecellReducer","action","type","FreecellTypes","rootReducer","combineReducers","freecell","middlewares","createLogger","store","createStore","applyMiddleware","dragCard","removeDraggedCard","toggleMenu","Header","isEndGame","useSelector","gamePoints","gameTime","dispatch","useDispatch","useState","timer","setTimer","useEffect","clearInterval","setInterval","className","src","Diamond","alt","ItemTypes","FreeCellCard","props","cardImg","showHint","find","h","useDrag","item","begin","end","monitor","canDrag","drag","useDrop","accept","canDrop","drop","ref","style","backgroundImage","key","FreeCells","HomeCellCard","isDraggedCardPoint","isDraggedCardSuit","canDropHomeCell","HomeCells","getStyles","isOver","isLastElement","border","borderRadius","Card","NestedDraggable","nested","cardLength","cardSuit","isDroppable","collect","propsRef","top","width","height","BlankDraggable","TableauColumn","reduce","Tableau","RestartGameButton","onClick","Back","NewGameButton","Plus","EndGameCard","gamePoint","Time","endGameSelector","createSelector","count","row","GameBoard","console","log","EndGameButton","Check","Menu","isShow","FreeCell","canBackOneStep","handleToggleMenu","backend","HTML5Backend","Hint","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,qC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,wBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,iBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,wfCgB5BC,EAhBO,CACpBC,UAAW,YACXC,oBAAqB,sBACrBC,UAAW,YACXC,uBAAwB,yBACxBC,uBAAwB,yBACxBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,SAAU,WACVC,YAAa,cACbC,cAAe,gBACfC,SAAU,WACVC,aAAc,eACdC,qBAAsB,wB,29BCwCjB,SAASC,GAAQC,GACtB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADC,EAEjB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFiC,KAE7BD,EAAMG,GAFuB,KAI3C,OAAOH,EAGF,SAASO,KACd,IAeMC,EAAQ,CAAC,QAAS,SAAU,SAAU,YAExCC,EAAQ,GAjBG,CACb,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,KAKKC,SAAQ,SAAAC,GACbH,EAAME,SAAQ,SAAAE,GACZH,EAAMI,KAAN,UAAcF,EAAd,YAAuBC,UAG3BH,EAAQV,GAAQU,GAEhB,IAAMK,EAAe,GAMrB,OALiCf,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtCW,SAAQ,SAAAK,GAC/BD,EAAaD,KAAKJ,EAAMO,OAAO,EAAGD,OAG7BD,EAGF,SAASG,GAAYC,GAC1B,MAAa,YAATA,EACKC,IACW,eAATD,EACFE,IACW,aAATF,EACFG,KACW,aAATH,EACFI,KACW,YAATJ,EACFK,IACW,eAATL,EACFM,IACW,aAATN,EACFO,KACW,aAATP,EACFQ,KACW,YAATR,EACFS,IACW,eAATT,EACFU,IACW,aAATV,EACFW,KACW,aAATX,EACFY,KACW,YAATZ,EACFa,IACW,eAATb,EACFc,IACW,aAATd,EACFe,KACW,aAATf,EACFgB,KACW,YAAThB,EACFiB,IACW,eAATjB,EACFkB,IACW,aAATlB,EACFmB,KACW,aAATnB,EACFoB,KACW,YAATpB,EACFqB,IACW,eAATrB,EACFsB,IACW,aAATtB,EACFuB,KACW,aAATvB,EACFwB,KACW,YAATxB,EACFyB,IACW,eAATzB,EACF0B,IACW,aAAT1B,EACF2B,KACW,aAAT3B,EACF4B,KACW,YAAT5B,EACF6B,IACW,eAAT7B,EACF8B,KACW,aAAT9B,EACF+B,KACW,aAAT/B,EACFgC,KACW,YAAThC,EACFiC,IACW,eAATjC,EACFkC,KACW,aAATlC,EACFmC,KACW,aAATnC,EACFoC,KACW,aAATpC,EACFqC,IACW,gBAATrC,EACFsC,KACW,cAATtC,EACFuC,KACW,cAATvC,EACFwC,KACW,YAATxC,EACFyC,IACW,eAATzC,EACF0C,KACW,aAAT1C,EACF2C,KACW,aAAT3C,EACF4C,KACW,YAAT5C,EACF6C,IACW,eAAT7C,EACF8C,KACW,aAAT9C,EACF+C,KACW,aAAT/C,EACFgD,KACW,YAAThD,EACFiD,IACW,eAATjD,EACFkD,KACW,aAATlD,EACFmD,KACW,aAATnD,EACFoD,UADF,EAKF,SAASC,GAAqBC,EAAOC,GAC1C,QACa,aAAVD,GAAkC,WAAVA,GACd,UAAVC,GAA+B,WAAVA,MAIX,UAAVD,GAA+B,WAAVA,GACX,aAAVC,GAAkC,WAAVA,GAYtB,SAASC,GAAWF,EAAOC,GAChC,OAAOD,IAAUC,EAOnB,SAASE,GAAiBC,GACxB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,GA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","file":"static/js/main.94920399.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Diamond.31995290.svg\";","module.exports = __webpack_public_path__ + \"static/media/Back.e066850b.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Clubs.ab7bb5e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Clubs.e4e26db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Clubs.892db90b.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Clubs.5b90a8c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Clubs.47f6c983.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Clubs.48832486.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Clubs.2ef336e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Clubs.d4104ecc.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Clubs.267dd350.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Clubs.d98b0a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Clubs.caa46bb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Clubs.baf9c346.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Clubs.0133363c.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Diamonds.d4e862c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Diamonds.6d650114.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Diamonds.bebcc8b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Diamonds.251f67f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Diamonds.0ba28f45.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Diamonds.4d9a975a.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Diamonds.5331b794.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Diamonds.2a6e62cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Diamonds.3fd0cedc.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Diamonds.4f39720c.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Diamonds.65f7a17a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Diamonds.0dc1bf7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Diamonds.fcb26db6.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Hearts.304bb6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Hearts.fb185d4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Hearts.f606a128.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Hearts.ac9215b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Hearts.68ee58f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Hearts.5f182f50.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Hearts.f5872bbf.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Hearts.3d92aa60.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Hearts.76e62b4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Hearts.74b1e4e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Hearts.6de610fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Hearts.9dc93f1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Hearts.1b5bfe88.svg\";","module.exports = __webpack_public_path__ + \"static/media/A_Spades.ca023df2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_Spades.43f683bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_Spades.858145f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_Spades.588dcc75.svg\";","module.exports = __webpack_public_path__ + \"static/media/5_Spades.3c34f454.svg\";","module.exports = __webpack_public_path__ + \"static/media/6_Spades.0b965a7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/7_Spades.11c46e38.svg\";","module.exports = __webpack_public_path__ + \"static/media/8_Spades.8f71dc86.svg\";","module.exports = __webpack_public_path__ + \"static/media/9_Spades.6399907c.svg\";","module.exports = __webpack_public_path__ + \"static/media/10_Spades.61874387.svg\";","module.exports = __webpack_public_path__ + \"static/media/J_Spades.8b41eabe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Q_Spades.2d09b22a.svg\";","module.exports = __webpack_public_path__ + \"static/media/K_Spades.85240b93.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hint.9e78d091.svg\";","module.exports = __webpack_public_path__ + \"static/media/Time icon.260221fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Plus.e8151770.svg\";","module.exports = __webpack_public_path__ + \"static/media/Check.23cfd688.svg\";","const FreeCellTypes = {\r\n  DRAG_CARD: 'DRAG_CARD',\r\n  REMOVE_DRAGGED_CARD: 'REMOVE_DRAGGED_CARD',\r\n  DROP_CARD: 'DROP_CARD',\r\n  DROP_CARD_TO_FREE_CELL: 'DROP_CARD_TO_FREE_CELL',\r\n  DROP_CARD_TO_HOME_CELL: 'DROP_CARD_TO_HOME_CELL',\r\n  START_A_NEW_GAME: 'START_A_NEW_GAME',\r\n  RESTART_THIS_GAME: 'RESTART_THIS_GAME',\r\n  END_GAME: 'END_GAME',\r\n  TOGGLE_MENU: 'TOGGLE_MENU',\r\n  BACK_ONE_STEP: 'BACK_ONE_STEP',\r\n  GET_HINT: 'GET_HINT',\r\n  UPDATE_TIMER: 'UPDATE_TIMER',\r\n  INCREASE_GAME_POINTS: 'INCREASE_GAME_POINTS'\r\n}\r\n\r\nexport default FreeCellTypes\r\n","import Club_A from '../assets/img/cards/A_Clubs.svg'\r\nimport Club_2 from '../assets/img/cards/2_Clubs.svg'\r\nimport Club_3 from '../assets/img/cards/3_Clubs.svg'\r\nimport Club_4 from '../assets/img/cards/4_Clubs.svg'\r\nimport Club_5 from '../assets/img/cards/5_Clubs.svg'\r\nimport Club_6 from '../assets/img/cards/6_Clubs.svg'\r\nimport Club_7 from '../assets/img/cards/7_Clubs.svg'\r\nimport Club_8 from '../assets/img/cards/8_Clubs.svg'\r\nimport Club_9 from '../assets/img/cards/9_Clubs.svg'\r\nimport Club_10 from '../assets/img/cards/10_Clubs.svg'\r\nimport Club_J from '../assets/img/cards/J_Clubs.svg'\r\nimport Club_Q from '../assets/img/cards/Q_Clubs.svg'\r\nimport Club_K from '../assets/img/cards/K_Clubs.svg'\r\nimport Diamond_A from '../assets/img/cards/A_Diamonds.svg'\r\nimport Diamond_2 from '../assets/img/cards/2_Diamonds.svg'\r\nimport Diamond_3 from '../assets/img/cards/3_Diamonds.svg'\r\nimport Diamond_4 from '../assets/img/cards/4_Diamonds.svg'\r\nimport Diamond_5 from '../assets/img/cards/5_Diamonds.svg'\r\nimport Diamond_6 from '../assets/img/cards/6_Diamonds.svg'\r\nimport Diamond_7 from '../assets/img/cards/7_Diamonds.svg'\r\nimport Diamond_8 from '../assets/img/cards/8_Diamonds.svg'\r\nimport Diamond_9 from '../assets/img/cards/9_Diamonds.svg'\r\nimport Diamond_10 from '../assets/img/cards/10_Diamonds.svg'\r\nimport Diamond_J from '../assets/img/cards/J_Diamonds.svg'\r\nimport Diamond_Q from '../assets/img/cards/Q_Diamonds.svg'\r\nimport Diamond_K from '../assets/img/cards/K_Diamonds.svg'\r\nimport Heart_A from '../assets/img/cards/A_Hearts.svg'\r\nimport Heart_2 from '../assets/img/cards/2_Hearts.svg'\r\nimport Heart_3 from '../assets/img/cards/3_Hearts.svg'\r\nimport Heart_4 from '../assets/img/cards/4_Hearts.svg'\r\nimport Heart_5 from '../assets/img/cards/5_Hearts.svg'\r\nimport Heart_6 from '../assets/img/cards/6_Hearts.svg'\r\nimport Heart_7 from '../assets/img/cards/7_Hearts.svg'\r\nimport Heart_8 from '../assets/img/cards/8_Hearts.svg'\r\nimport Heart_9 from '../assets/img/cards/9_Hearts.svg'\r\nimport Heart_10 from '../assets/img/cards/10_Hearts.svg'\r\nimport Heart_J from '../assets/img/cards/J_Hearts.svg'\r\nimport Heart_Q from '../assets/img/cards/Q_Hearts.svg'\r\nimport Heart_K from '../assets/img/cards/K_Hearts.svg'\r\nimport Spade_A from '../assets/img/cards/A_Spades.svg'\r\nimport Spade_2 from '../assets/img/cards/2_Spades.svg'\r\nimport Spade_3 from '../assets/img/cards/3_Spades.svg'\r\nimport Spade_4 from '../assets/img/cards/4_Spades.svg'\r\nimport Spade_5 from '../assets/img/cards/5_Spades.svg'\r\nimport Spade_6 from '../assets/img/cards/6_Spades.svg'\r\nimport Spade_7 from '../assets/img/cards/7_Spades.svg'\r\nimport Spade_8 from '../assets/img/cards/8_Spades.svg'\r\nimport Spade_9 from '../assets/img/cards/9_Spades.svg'\r\nimport Spade_10 from '../assets/img/cards/10_Spades.svg'\r\nimport Spade_J from '../assets/img/cards/J_Spades.svg'\r\nimport Spade_Q from '../assets/img/cards/Q_Spades.svg'\r\nimport Spade_K from '../assets/img/cards/K_Spades.svg'\r\n\r\nexport function shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1))\r\n    ;[array[i], array[j]] = [array[j], array[i]]\r\n  }\r\n  return array\r\n}\r\n\r\nexport function generateRandomCards() {\r\n  const points = [\r\n    'A',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '10',\r\n    'J',\r\n    'Q',\r\n    'K'\r\n  ]\r\n  const suits = ['Clubs', 'Spades', 'Hearts', 'Diamonds']\r\n\r\n  let cards = []\r\n  points.forEach(point => {\r\n    suits.forEach(suit => {\r\n      cards.push(`${point}_${suit}`)\r\n    })\r\n  })\r\n  cards = shuffle(cards)\r\n\r\n  const freecellList = []\r\n  const numberOfCardOfEachColumn = shuffle([7, 7, 7, 7, 6, 6, 6, 6])\r\n  numberOfCardOfEachColumn.forEach(number => {\r\n    freecellList.push(cards.splice(0, number))\r\n  })\r\n\r\n  return freecellList\r\n}\r\n\r\nexport function getImageObj(card) {\r\n  if (card === 'A_Clubs') {\r\n    return Club_A\r\n  } else if (card === 'A_Diamonds') {\r\n    return Diamond_A\r\n  } else if (card === 'A_Hearts') {\r\n    return Heart_A\r\n  } else if (card === 'A_Spades') {\r\n    return Spade_A\r\n  } else if (card === '2_Clubs') {\r\n    return Club_2\r\n  } else if (card === '2_Diamonds') {\r\n    return Diamond_2\r\n  } else if (card === '2_Hearts') {\r\n    return Heart_2\r\n  } else if (card === '2_Spades') {\r\n    return Spade_2\r\n  } else if (card === '3_Clubs') {\r\n    return Club_3\r\n  } else if (card === '3_Diamonds') {\r\n    return Diamond_3\r\n  } else if (card === '3_Hearts') {\r\n    return Heart_3\r\n  } else if (card === '3_Spades') {\r\n    return Spade_3\r\n  } else if (card === '4_Clubs') {\r\n    return Club_4\r\n  } else if (card === '4_Diamonds') {\r\n    return Diamond_4\r\n  } else if (card === '4_Hearts') {\r\n    return Heart_4\r\n  } else if (card === '4_Spades') {\r\n    return Spade_4\r\n  } else if (card === '5_Clubs') {\r\n    return Club_5\r\n  } else if (card === '5_Diamonds') {\r\n    return Diamond_5\r\n  } else if (card === '5_Hearts') {\r\n    return Heart_5\r\n  } else if (card === '5_Spades') {\r\n    return Spade_5\r\n  } else if (card === '6_Clubs') {\r\n    return Club_6\r\n  } else if (card === '6_Diamonds') {\r\n    return Diamond_6\r\n  } else if (card === '6_Hearts') {\r\n    return Heart_6\r\n  } else if (card === '6_Spades') {\r\n    return Spade_6\r\n  } else if (card === '7_Clubs') {\r\n    return Club_7\r\n  } else if (card === '7_Diamonds') {\r\n    return Diamond_7\r\n  } else if (card === '7_Hearts') {\r\n    return Heart_7\r\n  } else if (card === '7_Spades') {\r\n    return Spade_7\r\n  } else if (card === '8_Clubs') {\r\n    return Club_8\r\n  } else if (card === '8_Diamonds') {\r\n    return Diamond_8\r\n  } else if (card === '8_Hearts') {\r\n    return Heart_8\r\n  } else if (card === '8_Spades') {\r\n    return Spade_8\r\n  } else if (card === '9_Clubs') {\r\n    return Club_9\r\n  } else if (card === '9_Diamonds') {\r\n    return Diamond_9\r\n  } else if (card === '9_Hearts') {\r\n    return Heart_9\r\n  } else if (card === '9_Spades') {\r\n    return Spade_9\r\n  } else if (card === '10_Clubs') {\r\n    return Club_10\r\n  } else if (card === '10_Diamonds') {\r\n    return Diamond_10\r\n  } else if (card === '10_Hearts') {\r\n    return Heart_10\r\n  } else if (card === '10_Spades') {\r\n    return Spade_10\r\n  } else if (card === 'J_Clubs') {\r\n    return Club_J\r\n  } else if (card === 'J_Diamonds') {\r\n    return Diamond_J\r\n  } else if (card === 'J_Hearts') {\r\n    return Heart_J\r\n  } else if (card === 'J_Spades') {\r\n    return Spade_J\r\n  } else if (card === 'Q_Clubs') {\r\n    return Club_Q\r\n  } else if (card === 'Q_Diamonds') {\r\n    return Diamond_Q\r\n  } else if (card === 'Q_Hearts') {\r\n    return Heart_Q\r\n  } else if (card === 'Q_Spades') {\r\n    return Spade_Q\r\n  } else if (card === 'K_Clubs') {\r\n    return Club_K\r\n  } else if (card === 'K_Diamonds') {\r\n    return Diamond_K\r\n  } else if (card === 'K_Hearts') {\r\n    return Heart_K\r\n  } else if (card === 'K_Spades') {\r\n    return Spade_K\r\n  }\r\n}\r\n\r\nexport function isDifferentColorSuit(suitA, suitB) {\r\n  if (\r\n    (suitA === 'Diamonds' || suitA === 'Hearts') &&\r\n    (suitB === 'Clubs' || suitB === 'Spades')\r\n  ) {\r\n    return true\r\n  } else if (\r\n    (suitA === 'Clubs' || suitA === 'Spades') &&\r\n    (suitB === 'Diamonds' || suitB === 'Hearts')\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 判斷卡片的花色是否一樣。\r\n * @param {String} suitA\r\n * @param {String} suitB\r\n */\r\nexport function isSameSuit(suitA, suitB) {\r\n  return suitA === suitB\r\n}\r\n\r\n/**\r\n * 取得卡片點數對應的數值。\r\n * @param {String} cardPoint\r\n */\r\nfunction valueOfFreeceell(cardPoint) {\r\n  switch (cardPoint) {\r\n    case 'A':\r\n      return 1\r\n    case 'J':\r\n      return 11\r\n    case 'Q':\r\n      return 12\r\n    case 'K':\r\n      return 13\r\n    default:\r\n      return parseInt(cardPoint)\r\n  }\r\n}\r\n\r\n/**\r\n * 判斷卡片的點數相差是否為1。\r\n * @param {String} pointA\r\n * @param {String} pointB\r\n */\r\nexport function substractEqualToOne(pointA, pointB) {\r\n  return valueOfFreeceell(pointA) - valueOfFreeceell(pointB) === 1\r\n}\r\n\r\n/**\r\n * 判斷在tableau中的卡片是否可以放入新的一張。只要拖曳的卡片與在tableau的卡片花色成相反顏色，\r\n * 且拖曳卡片的點數小於tableau中的卡片 1 點，即可放入。\r\n * @param {*} isDraggedCard\r\n * @param {*} card\r\n */\r\nexport function isDroppable(isDraggedCard, card) {\r\n  const [isDraggedCardPoint, isDraggedCardSuit] = isDraggedCard.split('_')\r\n  const [cardPoint, cardSuit] = card.split('_')\r\n  // console.log(isDraggedCard, card, isDifferentColorSuit(isDraggedCardSuit, cardSuit), substractEqualToOne(cardPoint, isDraggedCardPoint))\r\n  if (isDraggedCardSuit !== cardSuit && isDraggedCardPoint !== cardPoint) {\r\n    if (\r\n      isDifferentColorSuit(isDraggedCardSuit, cardSuit) &&\r\n      substractEqualToOne(cardPoint, isDraggedCardPoint)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 判斷 homecell 是不是可以放入卡片。當 Homecell 儲存的卡片跟拖曳的卡片同一花色，且儲存\r\n * 的卡片點數小於拖曳卡片點數 1 點，即可放入卡片。\r\n * @param {String} isDraggedCard\r\n * @param {String} card\r\n */\r\nexport function canDropHomeCell(isDraggedCard, card) {\r\n  const [isDraggedCardPoint, isDraggedCardSuit] = isDraggedCard.split('_')\r\n\r\n  if (typeof card === 'undefined') {\r\n    if (isDraggedCardPoint === 'A') {\r\n      return true\r\n    }\r\n  } else {\r\n    const [cardPoint, cardSuit] = card.split('_')\r\n    if (\r\n      isSameSuit(isDraggedCardSuit, cardSuit) &&\r\n      substractEqualToOne(isDraggedCardPoint, cardPoint)\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n/**\r\n * 把總秒數轉換成 min:sec\r\n * @param {Number} totalSeconds\r\n */\r\nexport function getTime(totalSeconds) {\r\n  let minutes = Math.floor(totalSeconds / 60)\r\n  let seconds = totalSeconds - minutes * 60\r\n\r\n  if (minutes < 10) minutes = '0' + minutes\r\n  if (seconds < 10) seconds = '0' + seconds\r\n  return `${minutes}:${seconds}`\r\n}\r\n\r\nexport function isDraggable(tableauColumn, index) {\r\n  const newTableauColumn = [...tableauColumn]\r\n  const cards = newTableauColumn\r\n    .splice(index, tableauColumn.length - index)\r\n    .reverse()\r\n    .map(card => {\r\n      const [point, suit] = card.split('_')\r\n      return { point, suit }\r\n    })\r\n  for (let i = 0; i < cards.length - 1; i++) {\r\n    if (!isDifferentColorSuit(cards[i].suit, cards[i + 1].suit)) {\r\n      return false\r\n    }\r\n    if (!substractEqualToOne(cards[i + 1].point, cards[i].point)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","import {\r\n  isDifferentColorSuit,\r\n  substractEqualToOne,\r\n  isSameSuit,\r\n  isDraggable,\r\n  shuffle\r\n} from '../../utils/utils'\r\n\r\nconst getErea = card => {\r\n  if (typeof card.columnIndex !== 'undefined') {\r\n    return 'tableau'\r\n  } else if (typeof card.freeCellIndex !== 'undefined') {\r\n    return 'freecell'\r\n  } else if (typeof card.homeCellIndex !== 'undefined') {\r\n    return 'homecell'\r\n  }\r\n}\r\n\r\nconst getDraggedElements = (tableauCards, freeCellCards, isDraggedCard) => {\r\n  let draggedElement\r\n  const dragSource = getErea(isDraggedCard)\r\n  if (dragSource === 'tableau') {\r\n    const tableauColumn = tableauCards[isDraggedCard.columnIndex]\r\n    draggedElement = tableauColumn.splice(\r\n      isDraggedCard.index,\r\n      tableauColumn.length - isDraggedCard.index\r\n    )\r\n  } else if (dragSource === 'freecell') {\r\n    draggedElement = [freeCellCards[isDraggedCard.freeCellIndex]]\r\n    freeCellCards[isDraggedCard.freeCellIndex] = null\r\n  }\r\n  return draggedElement\r\n}\r\n\r\nexport const dropCard = (state, payload) => {\r\n  const { tableauCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const targetColumnIndex = payload.columnIndex\r\n  let draggedElements = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  newTableauCards[targetColumnIndex].push(...draggedElements)\r\n\r\n  return { freeCellCards: newFreeCellCards, tableauCards: newTableauCards }\r\n}\r\n\r\nexport const dropCardToFreeCell = (state, payload) => {\r\n  const { tableauCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const targetColumnIndex = payload.freeCellIndex\r\n  const draggedElement = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  newFreeCellCards[targetColumnIndex] = draggedElement[0]\r\n\r\n  return { freeCellCards: newFreeCellCards, tableauCards: newTableauCards }\r\n}\r\n\r\nexport const dropCardToHomeCell = (state, payload) => {\r\n  const { tableauCards, homeCellCards, freeCellCards, isDraggedCard } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newHomeCellCards = [...homeCellCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  let draggedElement = getDraggedElements(\r\n    newTableauCards,\r\n    newFreeCellCards,\r\n    isDraggedCard\r\n  )\r\n  const targetColumnIndex = payload.homeCellIndex\r\n  newHomeCellCards[targetColumnIndex].push(draggedElement[0])\r\n\r\n  return {\r\n    homeCellCards: newHomeCellCards,\r\n    tableauCards: newTableauCards,\r\n    freeCellCards: newFreeCellCards\r\n  }\r\n}\r\n\r\nexport const saveHistory = (state, payload) => {\r\n  const { isDraggedCard } = state\r\n  const history = {\r\n    source: isDraggedCard,\r\n    target: payload\r\n  }\r\n  return history\r\n}\r\n\r\nconst getLastTargetElementList = (\r\n  targetErea,\r\n  target,\r\n  newTableauCards,\r\n  newHomeCellCards,\r\n  newFreeCellCards\r\n) => {\r\n  let lastTargetElement\r\n\r\n  if (targetErea === 'freecell') {\r\n    const lastTargetIndex = target.freeCellIndex\r\n    lastTargetElement = [newFreeCellCards[lastTargetIndex]]\r\n    newFreeCellCards[lastTargetIndex] = null\r\n  } else if (targetErea === 'homecell') {\r\n    const lastTargetIndex = target.homeCellIndex\r\n    lastTargetElement = newHomeCellCards[lastTargetIndex].splice(-1, 1)\r\n  } else if (targetErea === 'tableau') {\r\n    const lastTargetIndex = target.columnIndex\r\n    lastTargetElement = newTableauCards[lastTargetIndex].splice(\r\n      target.index,\r\n      target.numOfCards\r\n    )\r\n  }\r\n  return lastTargetElement\r\n}\r\n\r\nexport const backOneStep = state => {\r\n  const { tableauCards, homeCellCards, freeCellCards } = state\r\n  const newTableauCards = [...tableauCards]\r\n  const newHomeCellCards = [...homeCellCards]\r\n  const newFreeCellCards = [...freeCellCards]\r\n\r\n  const lastMove = state.moveHistories.pop()\r\n  const lastMoveSourceErea = getErea(lastMove.source)\r\n  const lastMoveTargetErea = getErea(lastMove.target)\r\n\r\n  const lastTargetElementList = getLastTargetElementList(\r\n    lastMoveTargetErea,\r\n    lastMove.target,\r\n    newTableauCards,\r\n    newHomeCellCards,\r\n    newFreeCellCards\r\n  )\r\n\r\n  if (lastMoveSourceErea === 'freecell') {\r\n    const lastSourceIndex = lastMove.source.freeCellIndex\r\n    newFreeCellCards[lastSourceIndex] = lastTargetElementList[0]\r\n  } else if (lastMoveSourceErea === 'tableau') {\r\n    const lastSourceIndex = lastMove.source.columnIndex\r\n    newTableauCards[lastSourceIndex].push(...lastTargetElementList)\r\n  }\r\n\r\n  return {\r\n    freeCellCards: newFreeCellCards,\r\n    homeCellCards: newHomeCellCards,\r\n    tableauCards: newTableauCards\r\n  }\r\n}\r\n\r\n/**\r\n * 把在tableau中可以拖曳的卡片全部儲存進陣列\r\n * @param {Array} tableauCards\r\n */\r\nfunction getAllTableauDraggableCards(tableauCards) {\r\n  let tableauDraggableCards = []\r\n  for (let columnIndex = 0; columnIndex < tableauCards.length; columnIndex++) {\r\n    if (tableauCards[columnIndex].length === 0) {\r\n      tableauDraggableCards.push({ columnIndex, index: 0 })\r\n      continue\r\n    }\r\n    for (\r\n      let index = tableauCards[columnIndex].length - 1;\r\n      index >= 0;\r\n      index--\r\n    ) {\r\n      if (isDraggable(tableauCards[columnIndex], index)) {\r\n        const [point, suit] = tableauCards[columnIndex][index].split('_')\r\n        tableauDraggableCards.push({\r\n          columnIndex,\r\n          index,\r\n          card: { point, suit }\r\n        })\r\n      } else {\r\n        continue\r\n      }\r\n    }\r\n  }\r\n  return tableauDraggableCards\r\n}\r\n\r\n/**\r\n * 擷取所有的free cell\r\n * @param {Array} freeCellCards \r\n */\r\nfunction getAllFreeCellCards(freeCellCards) {\r\n  return freeCellCards.map((card, freeCellIndex) => ({\r\n    freeCellIndex,\r\n    card\r\n  }))\r\n}\r\n\r\n/**\r\n * 擷取所有的 home cell\r\n * @param {Array} homeCellCards \r\n */\r\nfunction getAllHomeCellCards(homeCellCards) {\r\n  return homeCellCards.map((card, homeCellIndex) => {\r\n    if (card.length === 0) return { homeCellIndex, card }\r\n    const [point, suit] = card[card.length - 1].split('_')\r\n    return {\r\n      homeCellIndex,\r\n      card: { point, suit }\r\n    }\r\n  })\r\n}\r\n\r\nexport const getHint = state => {\r\n  let tableauCards = [...state.tableauCards]\r\n  let homeCellCards = [...state.homeCellCards]\r\n  let freeCellCards = [...state.freeCellCards]\r\n\r\n  let tableauDraggableCards = shuffle(getAllTableauDraggableCards(tableauCards))\r\n\r\n  freeCellCards = getAllFreeCellCards(freeCellCards)\r\n\r\n  homeCellCards = getAllHomeCellCards(homeCellCards)\r\n\r\n  let hint = []\r\n\r\n  // 如果在home cell 中有可以放的位置優先處理\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCard = tableauDraggableCards[i]\r\n\r\n    if (typeof tableauCard.card === 'undefined') continue\r\n    for (let j = 0; j < homeCellCards.length; j++) {\r\n      const homeCellCard = homeCellCards[j]\r\n      if (\r\n        (homeCellCard.card.length === 0 && tableauCard.card.point === 'A') ||\r\n        (isSameSuit(tableauCard.card.suit, homeCellCard.card.suit) &&\r\n          substractEqualToOne(\r\n            tableauCard.card.point,\r\n            homeCellCard.card.point\r\n          ) &&\r\n          tableauCard.index ===\r\n            tableauCards[tableauCard.columnIndex].length - 1)\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            homeCellIndex: homeCellCard.homeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 如果在tableau中有可拖曳與放置的位置，則第二順位處理\r\n  for (let i = 0; i < tableauDraggableCards.length - 1; i++) {\r\n    const tableauCardA = tableauDraggableCards[i]\r\n\r\n    if (typeof tableauCardA.card === 'undefined') continue\r\n\r\n    for (let j = i + 1; j < tableauDraggableCards.length; j++) {\r\n      const tableauCardB = tableauDraggableCards[j]\r\n\r\n      if (typeof tableauCardB.card === 'undefined') continue\r\n      if (\r\n        isDifferentColorSuit(tableauCardA.card.suit, tableauCardB.card.suit) &&\r\n        ((tableauCardA.card.point - tableauCardB.card.point === 1 &&\r\n          tableauCardA.index ===\r\n            tableauCards[tableauCardA.columnIndex].length - 1) ||\r\n          (tableauCardB.card.point - tableauCardA.card.point === 1 &&\r\n            tableauCardB.index ===\r\n              tableauCards[tableauCardB.columnIndex].length - 1)) &&\r\n        tableauCardA.columnIndex !== tableauCardB.columnIndex\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCardA.columnIndex,\r\n            index: tableauCardA.index\r\n          },\r\n          {\r\n            columnIndex: tableauCardB.columnIndex,\r\n            index: tableauCardB.index\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 如果在 free cell中有可以儲存 tableau 中的卡片，則第三順位處理。有三種可以拖曳並放置卡片的情況，\r\n  // 第一種為 tableau 中有空白的行，且 free cell中有卡片；第二種為 free cell 中有空白的位置，且\r\n  // tableau 中有卡片；第三種為 free cell 中的卡片可以放至 tableau 的卡片上。\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCard = tableauDraggableCards[i]\r\n    for (let j = 0; j < freeCellCards.length; j++) {\r\n      const freeCellCard = freeCellCards[j]\r\n      if (\r\n        (typeof tableauCard.card === 'undefined' &&\r\n          freeCellCard.card !== null) ||\r\n        (typeof tableauCard.card !== 'undefined' && freeCellCard.card === null)\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            freeCellIndex: freeCellCard.freeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n      if (\r\n        isDifferentColorSuit(tableauCard.card.suit, freeCellCard.card.suit) &&\r\n        substractEqualToOne(tableauCard.card.point, freeCellCard.card.point)\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCard.columnIndex,\r\n            index: tableauCard.index\r\n          },\r\n          {\r\n            freeCellIndex: freeCellCard.freeCellIndex\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  // 最後一種為 tableau 中有一個可拖曳的卡片，而另一個則為空白的行。\r\n  for (let i = 0; i < tableauDraggableCards.length; i++) {\r\n    const tableauCardA = tableauDraggableCards[i]\r\n    for (let j = i + 1; j < tableauDraggableCards.length; j++) {\r\n      const tableauCardB = tableauDraggableCards[j]\r\n      if (\r\n        (typeof tableauCardA.card === 'undefined' &&\r\n          typeof tableauCardB.card !== 'undefined') ||\r\n        (typeof tableauCardA.card !== 'undefined' &&\r\n          typeof tableauCardB.card === 'undefined')\r\n      ) {\r\n        hint = [\r\n          {\r\n            columnIndex: tableauCardA.columnIndex,\r\n            index: tableauCardA.index\r\n          },\r\n          {\r\n            columnIndex: tableauCardB.columnIndex,\r\n            index: tableauCardB.index\r\n          }\r\n        ]\r\n        return hint\r\n      }\r\n    }\r\n  }\r\n\r\n  return hint\r\n}\r\n","import FreecellTypes from './freecell.types'\r\nimport {\r\n  dropCard,\r\n  dropCardToFreeCell,\r\n  dropCardToHomeCell,\r\n  saveHistory,\r\n  backOneStep,\r\n  getHint\r\n} from './freecell.utils'\r\nimport { generateRandomCards } from '../../utils/utils'\r\n\r\nconst INIT_RAMDOM_CARDS = generateRandomCards()\r\n\r\nconst INITIAL_STATE = {\r\n  initTableauCards: INIT_RAMDOM_CARDS.map(inner => inner.slice()),\r\n  tableauCards: INIT_RAMDOM_CARDS.map(inner => inner.slice()),\r\n  // tableauCards: [['A_Diamonds'], ['3_Diamonds', '2_Spades'], [], ['4_Spades'], ['3_Diamonds', '2_Diamonds']],\r\n  // tableauCards: [['3_Diamonds', '2_Spades'], [], []],\r\n  // tableauCards: [['4_Spades'], ['3_Diamonds'], ['3_Diamonds']],\r\n  moveHistories: [],\r\n  freeCellCards: [null, null, null, null],\r\n  // freeCellCards: ['3_Diamonds', '3_Diamonds', '3_Diamonds', '3_Diamonds'],\r\n  homeCellCards: [[], [], [], []],\r\n  // homeCellCards: [['2_Diamonds'], [], [], []],\r\n  isDraggedCard: null,\r\n  game: {\r\n    points: 0,\r\n    time: 0,\r\n    hint: []\r\n  },\r\n  showMenu: false\r\n}\r\n\r\nconst freecellReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FreecellTypes.DRAG_CARD:\r\n      return {\r\n        ...state,\r\n        isDraggedCard: action.payload,\r\n        game: {\r\n          ...state.game,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.REMOVE_DRAGGED_CARD:\r\n      return {\r\n        ...state,\r\n        isDraggedCard: null\r\n      }\r\n    case FreecellTypes.DROP_CARD:\r\n      return {\r\n        ...state,\r\n        ...dropCard(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.DROP_CARD_TO_FREE_CELL:\r\n      return {\r\n        ...state,\r\n        ...dropCardToFreeCell(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.DROP_CARD_TO_HOME_CELL:\r\n      return {\r\n        ...state,\r\n        ...dropCardToHomeCell(state, action.payload),\r\n        moveHistories: [\r\n          ...state.moveHistories,\r\n          saveHistory(state, action.payload)\r\n        ]\r\n      }\r\n    case FreecellTypes.START_A_NEW_GAME:\r\n      const initTableauCards = generateRandomCards()\r\n      return {\r\n        ...state,\r\n        initTableauCards: initTableauCards.map(inner => inner.slice()),\r\n        tableauCards: initTableauCards.map(inner => inner.slice()),\r\n        freeCellCards: [null, null, null, null],\r\n        homeCellCards: [[], [], [], []],\r\n        moveHistories: [],\r\n        game: {\r\n          points: 0,\r\n          time: 0,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.END_GAME:\r\n      return {\r\n        ...state,\r\n        tableauCards: []\r\n      }\r\n    case FreecellTypes.TOGGLE_MENU:\r\n      if (action.payload === 'close') {\r\n        return {\r\n          ...state,\r\n          showMenu: false\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        showMenu: !state.showMenu\r\n      }\r\n    case FreecellTypes.BACK_ONE_STEP:\r\n      return {\r\n        ...state,\r\n        ...backOneStep(state, action.payload)\r\n      }\r\n    case FreecellTypes.RESTART_THIS_GAME:\r\n      return {\r\n        ...state,\r\n        tableauCards: state.initTableauCards.map(inner => inner.slice()),\r\n        freeCellCards: [null, null, null, null],\r\n        homeCellCards: [[], [], [], []],\r\n        game: {\r\n          points: 0,\r\n          time: 0,\r\n          hint: []\r\n        }\r\n      }\r\n    case FreecellTypes.UPDATE_TIMER:\r\n      return {\r\n        ...state,\r\n        game: { ...state.game, time: state.game.time + 1 }\r\n      }\r\n    case FreecellTypes.INCREASE_GAME_POINTS:\r\n      return {\r\n        ...state,\r\n        game: { ...state.game, points: state.game.points + 5 }\r\n      }\r\n    case FreecellTypes.GET_HINT:\r\n      return {\r\n        ...state,\r\n        game: {\r\n          ...state.game,\r\n          hint: getHint(state)\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default freecellReducer\r\n","import { combineReducers } from 'redux'\r\nimport freecellReducer from './freecell/freecell.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  freecell: freecellReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst logger = createLogger()\r\n\r\nconst middlewares = [logger]\r\n// const middlewares = []\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n","import FreecellTypes from './freecell.types'\r\n\r\nexport const dragCard = payload => ({\r\n  type: FreecellTypes.DRAG_CARD,\r\n  payload: payload\r\n})\r\n\r\nexport const removeDraggedCard = () => ({\r\n  type: FreecellTypes.REMOVE_DRAGGED_CARD\r\n})\r\n\r\nexport const dropCard = payload => ({\r\n  type: FreecellTypes.DROP_CARD,\r\n  payload: payload\r\n})\r\n\r\nexport const dropCardToFreeCell = payload => ({\r\n  type: FreecellTypes.DROP_CARD_TO_FREE_CELL,\r\n  payload: payload\r\n})\r\n\r\nexport const dropCardToHomeCell = payload => ({\r\n  type: FreecellTypes.DROP_CARD_TO_HOME_CELL,\r\n  payload: payload\r\n})\r\n\r\nexport const startANewGame = () => ({\r\n  type: FreecellTypes.START_A_NEW_GAME\r\n})\r\n\r\nexport const endGame = () => ({\r\n  type: FreecellTypes.END_GAME\r\n})\r\n\r\nexport const toggleMenu = payload => ({\r\n  type: FreecellTypes.TOGGLE_MENU,\r\n  payload: payload\r\n})\r\n\r\nexport const backOneStep = () => ({\r\n  type: FreecellTypes.BACK_ONE_STEP\r\n})\r\n\r\nexport const restartThisGame = () => ({\r\n  type: FreecellTypes.RESTART_THIS_GAME\r\n})\r\n\r\nexport const updateTimer = () => ({\r\n  type: FreecellTypes.UPDATE_TIMER\r\n})\r\n\r\nexport const increaseGamePoints = () => ({\r\n  type: FreecellTypes.INCREASE_GAME_POINTS\r\n})\r\n\r\nexport const getHint = () => ({\r\n  type: FreecellTypes.GET_HINT\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Diamond from '../../assets/img/Diamond.svg'\r\nimport './Header.styles.scss'\r\nimport { updateTimer } from '../../redux/freecell/freecell.action'\r\nimport { getTime } from '../../utils/utils'\r\n\r\nconst Header = () => {\r\n  const isEndGame = useSelector(\r\n    state => state.freecell.tableauCards.length === 0\r\n  )\r\n  const gamePoints = useSelector(state => state.freecell.game.points)\r\n  const gameTime = useSelector(state => state.freecell.game.time)\r\n  const dispatch = useDispatch()\r\n  const [timer, setTimer] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!isEndGame) {\r\n      setTimer(\r\n        setInterval(() => {\r\n          dispatch(updateTimer())\r\n        }, 1000)\r\n      )\r\n    } else {\r\n      clearInterval(timer)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isEndGame])\r\n\r\n  return (\r\n    <div className='header'>\r\n      {!isEndGame ? (\r\n        <>\r\n          <span className='header__points'>{gamePoints}</span>\r\n          <img src={Diamond} alt='diamond' className='header__diamond' />\r\n          <span className='header__time'>{getTime(gameTime)}</span>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const ItemTypes = {\r\n  FREECEEL: 'FREECEEL'\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport './FreeCellCard.styles.scss'\r\nimport { getImageObj } from '../../utils/utils'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport {\r\n  dropCardToFreeCell,\r\n  dragCard,\r\n  removeDraggedCard\r\n} from '../../redux/freecell/freecell.action'\r\n\r\nconst FreeCellCard = props => {\r\n  const { card, index } = props\r\n  const dispatch = useDispatch()\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(h => h.freeCellIndex === index)\r\n\r\n  const [, drag] = useDrag({\r\n    item: { type: ItemTypes.FREECEEL },\r\n    begin: () => dispatch(dragCard({ freeCellIndex: index, card })),\r\n    end: (item, monitor) => dispatch(removeDraggedCard()),\r\n    canDrag: () => card !== null\r\n  })\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => card === null,\r\n    drop: () => dispatch(dropCardToFreeCell({ freeCellIndex: index }))\r\n  })\r\n\r\n  let cardImg\r\n  if (card) {\r\n    cardImg = (\r\n      <div\r\n        className='free-cell-card__card'\r\n        ref={drag}\r\n        style={{ backgroundImage: `url(${getImageObj(card)})` }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`free-cell-card ` + (showHint ? 'free-cell-card--hint' : '')}\r\n      key={`card-${index}`}\r\n    >\r\n      {cardImg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCellCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './FreeCells.styles.scss'\r\nimport FreeCellCard from '../FreeCellCard/FreeCellCard.component'\r\n\r\nconst FreeCells = () => {\r\n  const freeCellCards = useSelector(state => state.freecell.freeCellCards)\r\n\r\n  return (\r\n    <div className='free-cells'>\r\n      {freeCellCards.map((card, index) => (\r\n        <FreeCellCard card={card} index={index} key={`free cell ${index}`}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCells\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useDrop } from 'react-dnd'\r\nimport './HomeCellCard.styles.scss'\r\nimport {\r\n  dropCardToHomeCell,\r\n  increaseGamePoints\r\n} from '../../redux/freecell/freecell.action'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport { getImageObj, canDropHomeCell } from '../../utils/utils'\r\n\r\nconst HomeCellCard = props => {\r\n  const { card, index } = props\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(h => h.homeCellIndex === index)\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => canDropHomeCell(isDraggedCard.card, card[card.length - 1]),\r\n    drop: () => {\r\n      dispatch(dropCardToHomeCell({ homeCellIndex: index }))\r\n      dispatch(increaseGamePoints())\r\n    }\r\n  })\r\n\r\n  let cardImg =\r\n    card.length > 0 ? (\r\n      <div\r\n        key={card}\r\n        className='home-cell-card__card'\r\n        style={{\r\n          backgroundImage: `url(${getImageObj(card[card.length - 1])})`\r\n        }}\r\n      />\r\n    ) : (\r\n      'A'\r\n    )\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`home-cell-card ` + (showHint ? 'home-cell-card--hint' : '')}\r\n      key={`card-${index}`}\r\n    >\r\n      {cardImg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeCellCard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './HomeCells.styles.scss'\r\nimport HomeCellCard from '../HomeCellCard/HomeCellCard.component'\r\n\r\nconst HomeCells = () => {\r\n  const homeCellCards = useSelector(state => state.freecell.homeCellCards)\r\n\r\n  return (\r\n    <div className='home-cells'>\r\n      {homeCellCards.map((card, index) => (\r\n        <HomeCellCard card={card} index={index} key={`home cell ${index}`} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeCells\r\n","import React from 'react'\r\nimport './Card.styles.scss'\r\nimport { getImageObj } from '../../utils/utils'\r\n\r\nfunction getStyles(card, isOver, canDrop, isLastElement) {\r\n  return {\r\n    backgroundImage: `url(${getImageObj(card)})`,\r\n    border: isOver && canDrop && isLastElement ? '3px solid #ffac4e' : '',\r\n    borderRadius: isOver && canDrop && isLastElement ? '16px' : ''\r\n  }\r\n}\r\n\r\nconst Card = props => {\r\n  const { card, isLastElement, isOver, canDrop } = props\r\n  return (\r\n    <div\r\n      className='card'\r\n      style={getStyles(card, isOver, canDrop, isLastElement)}\r\n      key={card}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport './NestedDraggable.styles.scss'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport Card from '../Card/Card.component'\r\nimport {\r\n  dragCard,\r\n  dropCard,\r\n  removeDraggedCard\r\n} from '../../redux/freecell/freecell.action'\r\nimport { isDroppable, isDraggable } from '../../utils/utils'\r\n\r\nconst NestedDraggable = props => {\r\n  const {\r\n    nested,\r\n    card: { card, index },\r\n    columnIndex,\r\n    cardLength,\r\n    isLastElement\r\n  } = props\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n  const tableauCards = useSelector(state => state.freecell.tableauCards)\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(\r\n    h => h.columnIndex === columnIndex && h.index === index\r\n  )\r\n\r\n  const [, drag] = useDrag({\r\n    item: { type: ItemTypes.FREECEEL },\r\n    begin: () =>\r\n      dispatch(\r\n        dragCard({ card, columnIndex, index, numOfCards: cardLength - index })\r\n      ),\r\n    end: () => dispatch(removeDraggedCard()),\r\n    canDrag: monitor => isDraggable(tableauCards[columnIndex], index)\r\n  })\r\n\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    canDrop: () => isDroppable(isDraggedCard.card, card),\r\n    drop: () => {\r\n      dispatch(\r\n        dropCard({\r\n          columnIndex,\r\n          index: index + 1,\r\n          numOfCards: isDraggedCard.numOfCards\r\n        })\r\n      )\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n      canDrop: !!monitor.canDrop()\r\n    })\r\n  })\r\n\r\n  const propsRef = { ref: drag }\r\n  if (isDraggedCard && isDraggedCard.card !== card) {\r\n    propsRef.ref = drop\r\n  }\r\n\r\n  return (\r\n    <div\r\n      {...propsRef}\r\n      className={\r\n        `nested-draggable ` + (showHint ? 'nested-draggable--hint' : '')\r\n      }\r\n      style={{\r\n        top: index === 0 ? '0px' : 44 + 'px',\r\n        width: '132px',\r\n        height: 44 * (cardLength - index - 1) + 204 + 'px'\r\n      }}\r\n    >\r\n      <Card\r\n        card={card}\r\n        isLastElement={isLastElement}\r\n        cardLength={cardLength}\r\n        isOver={isOver}\r\n        canDrop={canDrop}\r\n      />\r\n      {nested}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NestedDraggable\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useDrop } from 'react-dnd'\r\nimport './BlankDraggable.styles.scss'\r\nimport { ItemTypes } from '../../reactdnd/freecell.dndtypes'\r\nimport { dropCard } from '../../redux/freecell/freecell.action'\r\n\r\nfunction getStyles(isOver) {\r\n  return {\r\n    border: isOver ? '3px solid #ffac4e' : '',\r\n    borderRadius: isOver ? '16px' : ''\r\n  }\r\n}\r\n\r\nconst BlankDraggable = ({ columnIndex }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const isDraggedCard = useSelector(state => state.freecell.isDraggedCard)\r\n\r\n  const hint = useSelector(state => state.freecell.game.hint)\r\n  const showHint = hint.find(h => h.columnIndex === columnIndex)\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.FREECEEL,\r\n    drop: () => {\r\n      dispatch(\r\n        dropCard({\r\n          columnIndex,\r\n          index: 0,\r\n          numOfCards: isDraggedCard.numOfCards\r\n        })\r\n      )\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver()\r\n    })\r\n  })\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`blank-draggable ` + (showHint ? 'blank-draggable--hint' : '')}\r\n      style={getStyles(isOver)}\r\n    ></div>\r\n  )\r\n}\r\n\r\nexport default BlankDraggable\r\n","import React from 'react'\r\nimport './TableauColumn.styles.scss'\r\nimport NestedDraggable from '../NestedDraggable/NestedDraggable.component'\r\nimport BlankDraggable from '../BlankDraggable/BlankDraggable.component'\r\n\r\nconst TableauColumn = props => {\r\n  const { cards, columnIndex } = props\r\n\r\n  return (\r\n    <div className='tableau-column'>\r\n      <div className='tableau-column__card-nested-group'>\r\n        {cards.length > 0 ? (\r\n          cards\r\n            .map((card, index) => ({ card, index }))\r\n            .reverse()\r\n            .reduce(\r\n              (nested, card) => (\r\n                <NestedDraggable\r\n                  nested={nested}\r\n                  cardLength={cards.length}\r\n                  card={card}\r\n                  columnIndex={columnIndex}\r\n                  isLastElement={card.index === cards.length - 1}\r\n                />\r\n              ),\r\n              null\r\n            )\r\n        ) : (\r\n          <BlankDraggable\r\n            columnIndex={columnIndex}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableauColumn\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Tableau.styles.scss'\r\nimport TableauColumn from '../TableauColumn/TableauColumn.component'\r\n\r\nconst Tableau = () => {\r\n  const tableauCards = useSelector(state => state.freecell.tableauCards)\r\n\r\n  return (\r\n    <div className='tableau'>\r\n      {tableauCards.map((cards, index) => (\r\n        <TableauColumn\r\n          key={`tableau ${index}`}\r\n          cards={cards}\r\n          columnIndex={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tableau\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './RestartGameButton.styles.scss'\r\nimport Back from '../../assets/img/Back.svg'\r\nimport { restartThisGame, toggleMenu } from '../../redux/freecell/freecell.action'\r\n\r\nconst RestartGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleRestartThisGame = () => {\r\n    dispatch(restartThisGame())\r\n    dispatch(toggleMenu('close'))\r\n  }\r\n\r\n  return (\r\n    <div className='restart-game-btn' onClick={handleRestartThisGame}>\r\n      <span>Restart this game</span>\r\n      <div\r\n        className='restart-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Back})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestartGameButton\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './NewGameButton.styles.scss'\r\nimport Plus from '../../assets/img/Plus.svg'\r\nimport { startANewGame, toggleMenu } from '../../redux/freecell/freecell.action'\r\n\r\nconst NewGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleStartANewGame = () => {\r\n    dispatch(startANewGame())\r\n    dispatch(toggleMenu('close'))\r\n  }\r\n\r\n  return (\r\n    <div className='new-game-btn' onClick={handleStartANewGame}>\r\n      <span>Start a new game</span>\r\n      <div\r\n        className='new-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Plus})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewGameButton\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Time from '../../assets/img/Time icon.svg'\r\nimport Diamond from '../../assets/img/Diamond.svg'\r\nimport './EndGameCard.styles.scss'\r\nimport RestartGameButton from '../RestartGameButton/RestartGameButton.component'\r\nimport NewGameButton from '../NewGameButton/NewGameButton.component'\r\nimport { getTime } from '../../utils/utils'\r\n\r\nconst EndGameCard = () => {\r\n  const gameTime = useSelector(state => state.freecell.game.time)\r\n  const gamePoint = useSelector(state => state.freecell.game.points)\r\n\r\n  return (\r\n    <div className='end-game'>\r\n      <div className='end-game__content'>\r\n        <div className='end-game__info'>\r\n          <div className='end-game__game-points'>\r\n            <img src={Diamond} alt='diamond' />\r\n            <h1>{gamePoint}</h1>\r\n            <img src={Diamond} alt='diamond' />\r\n          </div>\r\n          <div className='end-game__game-time'>\r\n            <img src={Time} alt='time' />\r\n            <h4>{getTime(gameTime)}</h4>\r\n          </div>\r\n        </div>\r\n        <div className='end-game__operations'>\r\n          <RestartGameButton />\r\n          <NewGameButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EndGameCard\r\n","import { createSelector } from 'reselect'\r\n\r\nconst tableauCards = state => state.freecell.tableauCards\r\nconst freeCellCards = state => state.freecell.freeCellCards\r\nconst moveHistories = state => state.freecell.moveHistories\r\n\r\nexport const endGameSelector = createSelector(\r\n  tableauCards,\r\n  freeCellCards,\r\n  (tableauCards, freeCellCards) => {\r\n    const numOfTableauCard = tableauCards.reduce(\r\n      (count, row) => count + row.length,\r\n      0\r\n    )\r\n\r\n    const numOfFreeCellCards = freeCellCards.reduce(\r\n      (count, row) => count + (row !== null ? 1 : 0),\r\n      0\r\n    )\r\n    return numOfTableauCard + numOfFreeCellCards === 0\r\n  }\r\n)\r\n\r\nexport const canBackOnStepSelector = createSelector(\r\n  moveHistories,\r\n  moveHistories => moveHistories.length > 0\r\n)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './GameBoard.styles.scss'\r\nimport FreeCells from '../FreeCells/FreeCells.component'\r\nimport HomeCells from '../HomeCells/HomeCells.component'\r\nimport Tableau from '../Tableau/Tableau.component'\r\nimport EndGameCard from '../EndGameCard/EndGameCard.component'\r\nimport { endGameSelector } from '../../redux/freecell/freecell.selectors'\r\n\r\nconst GameBoard = () => {\r\n  const isEndGame = useSelector(endGameSelector)\r\n  console.log(isEndGame)\r\n  return (\r\n    <div className='game-board'>\r\n      <div className='game-board__top-nav'>\r\n        <FreeCells />\r\n        <HomeCells />\r\n      </div>\r\n      {isEndGame ? <EndGameCard /> : <Tableau />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameBoard\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './EndGameButton.styles.scss'\r\nimport Check from '../../assets/img/Check.svg'\r\nimport {\r\n  endGame,\r\n  toggleMenu\r\n} from '../../redux/freecell/freecell.action'\r\n\r\nconst EndGameButton = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleEndGame = () => {\r\n    dispatch(endGame())\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  return (\r\n    <div className='end-game-btn' onClick={handleEndGame}>\r\n      <span>End game</span>\r\n      <div\r\n        className='end-game-btn__icon'\r\n        style={{ backgroundImage: `url(${Check})` }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EndGameButton\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './Menu.styles.scss'\r\nimport RestartGameButton from '../RestartGameButton/RestartGameButton.component'\r\nimport NewGameButton from '../NewGameButton/NewGameButton.component'\r\nimport EndGameButton from '../EndGameButton/EndGameButton.component'\r\n\r\nconst Menu = () => {\r\n  const isShow = useSelector(state => state.freecell.showMenu)\r\n  return (\r\n    <div className={`menu ${isShow ? 'menu--active' : ''}`}>\r\n      <div className='menu__content'>\r\n        <RestartGameButton />\r\n        <NewGameButton />\r\n        <EndGameButton />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { DndProvider } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport Back from '../../assets/img/Back.svg'\r\nimport Hint from '../../assets/img/Hint.svg'\r\nimport './FreeCell.styles.scss'\r\nimport Header from '../../components/Header/Header.component'\r\nimport GameBoard from '../../components/GameBoard/GameBoard.component'\r\nimport Menu from '../../components/Menu/Menu.component'\r\nimport { toggleMenu, backOneStep, getHint } from '../../redux/freecell/freecell.action'\r\nimport { endGameSelector } from '../../redux/freecell/freecell.selectors'\r\n\r\nconst FreeCell = () => {\r\n  const dispatch = useDispatch()\r\n  const showMenu = useSelector(state => state.freecell.showMenu)\r\n  const canBackOneStep = useSelector(\r\n    state => state.freecell.moveHistories.length > 0\r\n  )\r\n  const isEndGame = useSelector(endGameSelector)\r\n\r\n  const handleToggleMenu = () => {\r\n    dispatch(toggleMenu())\r\n  }\r\n\r\n  const handleBackOneStep = () => {\r\n    if (canBackOneStep && !isEndGame) {\r\n      dispatch(backOneStep())\r\n    }\r\n  }\r\n\r\n  const handleGetHint = () => {\r\n    dispatch(getHint())\r\n  }\r\n\r\n  return (\r\n    <div className='free-cell'>\r\n      <header className='free-cell__header'>\r\n        <div className='free-cell__logo'>Freecell</div>\r\n        <Header />\r\n        <div\r\n          className={`free-cell__menu ${\r\n            showMenu ? 'free-cell__menu--active' : ''\r\n          }`}\r\n          onClick={handleToggleMenu}\r\n        >\r\n          <span></span>\r\n        </div>\r\n      </header>\r\n      <Menu isShow={showMenu} handleToggleMenu={handleToggleMenu} />\r\n      <div className='free-cell__game-board'>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <GameBoard />\r\n        </DndProvider>\r\n        <div className='free-cell__hint' onClick={handleGetHint}>\r\n          <button>\r\n            <img src={Hint} alt='hint button' />\r\n          </button>\r\n        </div>\r\n        <div className='free-cell__back' onClick={handleBackOneStep}>\r\n          <button>\r\n            <img src={Back} alt='back button' />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FreeCell\r\n","import React from 'react'\nimport './App.css'\nimport FreeCell from './pages/FreeCell/FreeCell.component'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <FreeCell />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport { store } from './redux/store'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}